package shlm.lmcs.com.lazycat.SuperSystemOS.SuperSystemclass;import android.os.Bundle;import android.support.annotation.Nullable;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ListView;import android.widget.TextView;import java.util.ArrayList;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.R;import shlm.lmcs.com.lazycat.SuperSystemOS.PullAdapter.PullPrintorders;/** * 管理已经打印的订单 */public class AdminPrintorders extends LazyCatAct {    private ListView listView;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setStatusBar("#efefef");        setContentView(R.layout.activity_superadminprintorders);        listView = findViewById(R.id.activity_superadminPrintListview);        TextUnt.with(AdminPrintorders.this, R.id.assembly_act_headTitle).setText("打印订单完毕的商家");        listener();        init();    }    /**     * 初始化     */    private void init() {        /*开始拉取已经打印的所有订单 用来判断是否需要取消打印*/        PullPrintorders._pull(AdminPrintorders.this, new PullPrintorders.PullPrintordersListener() {            @Override            public void _onPull(String _returnCode, ArrayList<PullPrintorders.PrintOrders> _list) {                PrintOrdersAdapter printOrdersAdapter = new PrintOrdersAdapter(_list);                listView.setAdapter(printOrdersAdapter);            }            @Override            public void _onError() {                Tools.showError(AdminPrintorders.this, "错误信息", "没有打印订单数据!");            }        });    }    /**     * 监听事件     */    private void listener() {        /**         * 退出监听         */        setBackListener(R.id.assembly_act_headBackImg);    }    /**     * 适配器     */    public class PrintOrdersAdapter extends BaseAdapter {        private ArrayList<PullPrintorders.PrintOrders> printOrders;        public PrintOrdersAdapter(ArrayList<PullPrintorders.PrintOrders> listClass) {            printOrders = listClass;        }        @Override        public int getCount() {            return printOrders.size();        }        @Override        public Object getItem(int position) {            return position;        }        @Override        public long getItemId(int position) {            return position;        }        @Override        public View getView(int position, View convertView, ViewGroup parent) {            Values values;            if (convertView != null) {                values = (Values) convertView.getTag();            } else {                values = new Values();                convertView = LayoutInflater.from(getApplicationContext()).inflate(R.layout.item_printorders, null,                        false);                convertView.findViewById(R.id.item_printordersBody).setBackground(Tools.CreateDrawable(1, "#ffffff",                        "#ffffff", 10));                values._name = convertView.findViewById(R.id.item_printordersShopname);/*名称*/                values._addr = convertView.findViewById(R.id.item_printordersAddr);/*地址*/                values._people = convertView.findViewById(R.id.item_printordersShopusepeople);/*所属人*/                values._tel = convertView.findViewById(R.id.item_printordersShopTel);/*电话*/            }            TextUnt.with(values._name).setText(this.printOrders.get(position)._name);            TextUnt.with(values._addr).setText(this.printOrders.get(position)._addr);            TextUnt.with(values._people).setText(this.printOrders.get(position)._people);            TextUnt.with(values._tel).setText(this.printOrders.get(position)._tel);            return convertView;        }        class Values {            TextView _name, _tel, _addr, _people;        }    }}