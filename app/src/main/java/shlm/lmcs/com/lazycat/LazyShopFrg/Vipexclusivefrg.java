package shlm.lmcs.com.lazycat.LazyShopFrg;import android.annotation.SuppressLint;import android.graphics.Color;import android.os.Build;import android.os.Bundle;import android.support.annotation.RequiresApi;import android.support.v4.widget.TextViewCompat;import android.view.LayoutInflater;import android.view.TextureView;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import java.util.ArrayList;import cn.pedant.SweetAlert.SweetAlertDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyClass.LazyCatFragment;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopVip.SystemVip;import shlm.lmcs.com.lazycat.R;import shlm.lmcs.com.lazycat.SuperSystemOS.PulloutOrders;/** * 发送的订单 * <p> * 原先为VIP的专属界面 现在不改名 直接使用 以后再改 */public class Vipexclusivefrg extends LazyCatFragment {	private View item;//布局	private ListView _listView;	@SuppressLint("ResourceType")	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,							 Bundle savedInstanceState) {		item = inflater.inflate(R.layout.fragment_vipexclusive, null, false);		item.findViewById(R.id.assembly_act_headBackImg).setVisibility(View.GONE);/*隐藏退出的图片*/		TextUnt.with(item, R.id.assembly_act_headTitle).setText("订单信息").setTextColor(getResources().getString(R.color.ThemeColor));		/*列表框*/		_listView = item.findViewById(R.id.fragment_vipexclusiveListview);		init();		return item;	}	/**	 * 初始化界面处理	 */	@SuppressLint("NewApi")	private void init() {		SystemVip systemVip = new SystemVip(getContext());		systemVip.Start(new SystemVip.OnVipcheck() {			@Override			public void onIsvip() {			}			@Override			public void onIsnovip() {			}			@SuppressLint("ResourceType")			@Override			public void onIsnologin() {				/*没有登录*/				SweetAlertDialog sweetAlertDialog = new SweetAlertDialog(getContext(),					SweetAlertDialog.ERROR_TYPE);				sweetAlertDialog.setContentTextSize(13);				sweetAlertDialog.setContentText("您还没有登录云仓库");				sweetAlertDialog.setTitle("没有登录");				sweetAlertDialog.setConfirmButtonTextColor(Color.WHITE);				sweetAlertDialog.setConfirmButtonBackgroundColor(Color.parseColor(getResources().getString(R.color.ThemeColor)));				sweetAlertDialog.setConfirmButton("关闭",					new SweetAlertDialog.OnSweetClickListener() {					@Override					public void onClick(SweetAlertDialog sweetAlertDialog) {						sweetAlertDialog.dismiss();					}				});				sweetAlertDialog.show();			}			@Override			public void onIslogin() {				PulloutOrders.Pull(getContext(), new PulloutOrders.onPull() {					@Override					public void onPullok(ArrayList<PulloutOrders.Orderpage> _pages) {						if (_pages == null) {						} else {							PulloutAdapter pulloutAdapter = new PulloutAdapter(_pages);							_listView.setAdapter(pulloutAdapter);						}					}					@Override					public void onPullError() {						Tools.showError(getContext(), "错误", "获取订单失败");					}					@Override					public void onPullNull() {						Tools.showError(getContext(), "提示", "您的订单列表是空的");					}				});			}		});	}	/**	 * 订单Adapter	 */	public class PulloutAdapter extends BaseAdapter {		ArrayList<PulloutOrders.Orderpage> ar_pages = new ArrayList<PulloutOrders.Orderpage>();		public PulloutAdapter(ArrayList<PulloutOrders.Orderpage> _pages) {			this.ar_pages.addAll(_pages);		}		@Override		public int getCount() {			if (this.ar_pages != null) {				return this.ar_pages.size();			} else {				return 0;			}		}		@Override		public Object getItem(int position) {			return position;		}		@Override		public long getItemId(int position) {			return position;		}		@SuppressLint("ResourceType")		@RequiresApi(api = Build.VERSION_CODES.M)		@Override		public View getView(int position, View convertView, ViewGroup parent) {			Values values;			if (convertView != null) {				values = (Values) convertView.getTag();			} else {				convertView =					LayoutInflater.from(getContext()).inflate(R.layout.item_sendsystemorderact_list, null, false);				values = new Values();				values.listBody = convertView.findViewById(R.id.item_sendsystemorderact_list_body);				values.seeBtn =					convertView.findViewById(R.id.item_sendsystemorderact_list_btnToseeOrder);				values.orderNumber =					convertView.findViewById(R.id.item_sendsystemorderact_list_orderNumber);				values.cancelBtn =					convertView.findViewById(R.id.item_sendsystemorderact_list_btnToCancleOrder);				values.title =					convertView.findViewById(R.id.item_sendsystemorderact_list_shoptitle);				convertView.setTag(values);			}			/*设置订单号*/			TextUnt.with(values.orderNumber).setText(this.ar_pages.get(position)._ordernumber);			/*标题*/			TextUnt.with(values.title).setText(this.ar_pages.get(position)._title);			/**			 * 取消订单			 */			TextUnt.with(values.cancelBtn).setVisibility(true).setOnClick(new View.OnClickListener() {				@Override				public void onClick(View v) {				}			}).setTextColor("#f30d88").setBackground(Tools.CreateDrawable(2, "#f30d88", "#ffffff",				50)).setVisibility(true);			;			/**			 *查看订单			 */			TextUnt.with(values.seeBtn).setVisibility(true).setOnClick(new View.OnClickListener() {				@Override				public void onClick(View v) {				}			}).setTextColor(getResources().getString(R.color.ThemeColor)).setBackground(Tools.CreateDrawable(2, getResources().getString(R.color.ThemeColor), "#ffffff", 50));			/*设置ITEM的边框*/			values.listBody.setBackground(Tools.CreateDrawable(1, "#ffffff", "#ffffff", 20));			return convertView;		}		class Values {			LinearLayout listBody;			TextView seeBtn;/*查看订单*/			TextView cancelBtn;/*取消订单*/			TextView orderNumber;/*订单号码*/			TextView title;		}	}}