package shlm.lmcs.com.lazycat.SuperSystemOS.SuperSystemclass;import android.annotation.SuppressLint;import android.os.Bundle;import android.support.annotation.Nullable;import android.util.Log;import android.view.View;import android.widget.EditText;import org.xmlpull.v1.XmlPullParser;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 商品初始化 */public class SystemShopinit extends LazyCatAct {    private String MSG = "SystemShopinit.java[+]";    private EditText _inputTitle, _inputBaroce, _inputTp, _inputRetail, _inputBrand;    private String _returnCode = "";    @SuppressLint("ResourceType")    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setStatusBar("#efefef");        setContentView(R.layout.activity_systemshopinit);        TextUnt.with(this, R.id.assembly_act_headTitle).setText("云仓库商品上架初始化");        findViewById(R.id.activity_systemshopinitValuesBody).setBackground(Tools.CreateDrawable(1, "#ffffff",                "#ffffff", 20));        _inputTitle = findViewById(R.id.activity_systemshopinitInputTitle);        _inputBaroce = findViewById(R.id.activity_systemshopinitInputBarcode);        _inputTp = findViewById(R.id.activity_systemshopinitInputTp);        _inputRetail = findViewById(R.id.activity_systemshopinitInputRetail);        _inputBrand = findViewById(R.id.activity_systemshopinitInputBrand);        findViewById(R.id.activity_systemshopinitBtnInit).setBackground(Tools.CreateDrawable(1,                getResources().getString(R.color.ThemeColor), getResources().getString(R.color.ThemeColor), 10));        init();        listener();    }    /*初始化*/    private void init() {    }    /*监听方法*/    private void listener() {        setBackListener(R.id.assembly_act_headBackImg);        /**         * 提交入库         */        findViewById(R.id.activity_systemshopinitBtnInit).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                LocalValues.HTTP_ADDRS http_addrs = new LocalValues.HTTP_ADDRS(getApplicationContext());                XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getJavaXmlinstanceBuilder(true);                xmlInstance.setXmlTree(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_TITLE,                        _inputTitle.getText().toString());//设置标题                xmlInstance.setXmlTree(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_BARCODE,                        _inputBaroce.getText().toString());//设置条码                xmlInstance.setXmlTree(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_TP,                        _inputTp.getText().toString());//设置批发价格                xmlInstance.setXmlTree(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_RETAIL,                        _inputRetail.getText().toString());//建议零售价                xmlInstance.setXmlTree(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_BRAND,                        _inputBrand.getText().toString());//品牌                xmlInstance.overJavaDom();                Log.i(MSG, "xml提交信息为:" + xmlInstance.getXmlTree().trim());                Net.doPostXml(http_addrs.HTTP_ADDR_SHOPINIT, new ProgramInterface() {                    @Override                    public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                        _refreshDialog.dismiss();                        Log.i(MSG, "商品初始化回传数据信息:" + data.trim());                        if (!"".equals(data)) {                            XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                            xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                                @Override                                public void onFaile() {                                }                                @Override                                public void onStartDocument(String tag) {                                }                                @Override                                public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                                    try {                                        if (tag.equals(LocalAction.ACTION_RETURNCODE)) {                                            _returnCode = pullParser.nextText().trim();                                        }                                    } catch (Exception e) {                                        e.printStackTrace();                                    }                                }                                @Override                                public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                                }                                @Override                                public void onEndDocument() {                                    if (LocalValues.NET_OK.equals(_returnCode)) {                                        Tools.showSuccess(SystemShopinit.this, "初始化完成",                                                "商品:" + _inputTitle.getText().toString().trim() + "初始化成功,现在可以完善参数信息了");                                    } else {                                        Tools.showError(SystemShopinit.this, "错误信息", "商品初始化失败");                                    }                                }                            });                        } else {                            Tools.showError(SystemShopinit.this, "错误信息", "商品初始化失败,错误信息:" + data.trim());                        }                    }                    @Override                    public WaitDialog.RefreshDialog onStartLoad() {                        return Tools.getShowwait(SystemShopinit.this);                    }                    @Override                    public void onFaile(String data, int code) {                    }                }, xmlInstance.getXmlTree().trim());            }        });    }}