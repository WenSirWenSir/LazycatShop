package shlm.lmcs.com.lazycat.LazyShopMonitor;import android.content.Context;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import org.xmlpull.v1.XmlPullParser;import java.util.ArrayList;import java.util.List;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyPage.WEB_VALUES_ACT;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Config;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlTagValuesFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyShopValues.LocalMerchantXmlvalues;import shlm.lmcs.com.lazycat.R;/** * 商家促销的管理者 * <p> * 在首页中管理商家促销的界面 */public class MerchantMonitor extends Monitor {    private Context mContext;    private LinearLayout _merchantView;    private MonitorViewIDPage.MerchantMonitorViewidPage viewidPage = new MonitorViewIDPage            .MerchantMonitorViewidPage();    private XmlTagValuesFactory.XMLtagMainMerchant xmLtagMainMerchant = new XmlTagValuesFactory            .XMLtagMainMerchant();    private LocalMerchantXmlvalues MerchantXmlvalues = null;    private String MSG = "MerchantMonitor.java[+]";    private int _Static = 0;    private List<LocalMerchantXmlvalues> MerchantXmlList = new ArrayList<LocalMerchantXmlvalues>();    public MerchantMonitor(View merchantView, Context context) {        this.mContext = context;        this._merchantView = (LinearLayout) merchantView;        /*初始化处理 处理商家促销的界面控件ID整理*/        /*第一个背景图片*/        viewidPage.setMERCHANTMONITOR_FIRSTBACKGROUND((LinearLayout) this._merchantView                .findViewById(R.id.assembly_fragment_main_erpromotion_firstBackgroundBody));        /*第一个状态*/        viewidPage.setMERCHANTMONITOR_FIRSTSTATUS((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_firstStatus));        /*第一个标题*/        viewidPage.setMERCHANTMONITOR_FIRSTTITLE((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_fristTitle));        /*第一个标语*/        viewidPage.setMERCHANTMONITOR_FIRSTTEXT((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_fristText));        /**         * 第二个图片控件         */        /*第一个背景图片*/        viewidPage.setMERCHANTMONITOR_SECONDBACKGROUND((LinearLayout) this._merchantView                .findViewById(R.id.assembly_fragment_main_erpromotion_secondBackgroundBody));        /*第一个状态*/        viewidPage.setMERCHANTMONITOR_FIRSTSTATUS((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_secondStatus));        /*第一个标题*/        viewidPage.setMERCHANTMONITOR_FIRSTTITLE((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_secondTitle));        /*第一个标语*/        viewidPage.setMERCHANTMONITOR_FIRSTTEXT((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_secondText));        /**         * 第三个图片控件         */        /*第一个背景图片*/        viewidPage.setMERCHANTMONITOR_THREEBACKGROUND((LinearLayout) this._merchantView                .findViewById(R.id.assembly_fragment_main_erpromotion_threeBackgroundBody));        /*第一个状态*/        viewidPage.setMERCHANTMONITOR_FIRSTSTATUS((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_threeStatus));        /*第一个标题*/        viewidPage.setMERCHANTMONITOR_FIRSTTITLE((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_threeTitle));        /*第一个标语*/        viewidPage.setMERCHANTMONITOR_FIRSTTEXT((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_threeText));        /**         * 第四个图片控件         */        /*第一个背景图片*/        viewidPage.setMERCHANTMONITOR_FOURBACKGROUND((LinearLayout) this._merchantView                .findViewById(R.id.assembly_fragment_main_erpromotion_fourBackgroundBody));        /*第一个状态*/        viewidPage.setMERCHANTMONITOR_FIRSTSTATUS((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_fourStatus));        /*第一个标题*/        viewidPage.setMERCHANTMONITOR_FIRSTTITLE((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_fourTitle));        /*第一个标语*/        viewidPage.setMERCHANTMONITOR_FIRSTTEXT((TextView) this._merchantView.findViewById(R.id                .assembly_fragment_main_erpromotion_fourText));    }    /**     * 开始事务管理     */    public void Start() {        /*访问互联网获取数据信息*/        Net.doGet(mContext, Config.HTTP_ADDR.getMerchantMonitorAddr(), new Net                .onVisitInterServiceListener() {            @Override            public void onSucess(String tOrgin) {                Log.i(Config.DEBUG, "MerchantMonitor.java[+]获取到的MerchantMonitor数据为:" + tOrgin                        .toString());                onXml(tOrgin);            }            @Override            public void onNotConnect() {            }            @Override            public void onFail(String tOrgin) {            }        });    }    private void onXml(String xml) {        MerchantXmlvalues = null;        XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(xml);        xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {            @Override            public void onFaile() {            }            @Override            public void onStartDocument() {            }            @Override            public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                try {                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant.key_merchant_title)) {                        xmLtagMainMerchant.setMerchant_title(pullParser.nextText());                    }                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant.key_merchant_photoaddr)) {                        xmLtagMainMerchant.setMerchant_photoaddr(pullParser.nextText());                    }                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant.key_merchant_values)) {                        /*创建一个类*/                        if (MerchantXmlvalues == null) {                            MerchantXmlvalues = new LocalMerchantXmlvalues();                        }                    }                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant                            .key_merchant_values_title)) {                        /*标题*/                        MerchantXmlvalues.setTitle(pullParser.nextText());                    }                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant                            .key_merchant_values_text)) {                        MerchantXmlvalues.setText(pullParser.nextText());                    }                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant                            .key_merchant_values_status)) {                        MerchantXmlvalues.setStatus(pullParser.nextText());                    }                    if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant                            .key_merchant_values_background)) {                        MerchantXmlvalues.setBackground(pullParser.nextText());                    }                } catch (Exception e) {                }            }            @Override            public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                Log.e(Config.DEBUG, "MerchantMonitor.java[+]结束节点为:" + tag);                if (tag.equals(XmlTagValuesFactory.XMLtagMainMerchant.key_merchant_values)) {                    MerchantXmlList.add(MerchantXmlvalues);                    MerchantXmlvalues = null;                }            }            @Override            public void onEndDocument() {                LinearLayout layout = (LinearLayout) _merchantView.getChildAt(0);/*获取第一个就是控件*/                /*整理界面 除了背景之外.因为背景需要下载*/                TextView first_title = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_fristTitle);                TextView second_title = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondTitle);                TextView three_title = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeTitle);                TextView four_title = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourTitle);                /*标语View*/                TextView first_text = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_fristText);                TextView second_text = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondText);                TextView three_text = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeText);                TextView four_text = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourText);                /*状态的View*/                TextView first_status = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_firstStatus);                TextView second_status = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondStatus);                TextView three_status = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeStatus);                TextView four_status = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourStatus);                /**                 * 尝试加载图片                 */                /*判断VIEW是否有存在图片的控件*/                if (viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().getChildAt(0) != null) {                    /*文件存在 不重新加载*/                } else {                    /*文件不存在 加载*/                    ImageView img = new ImageView(viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND()                            .getContext());                    /*初始化布局Params*/                    LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout                            .LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);                    img.setLayoutParams(params);                    viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().removeAllViews();/*首先清空所有的View*/                    viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().addView(img);/*添加布局*/                }                /**                 * 尝试加载图片代码结束                 */                /*背景View点击的事务管理*/                LinearLayout btn_firstBackground = layout.findViewById(R.id                        .assembly_fragment_main_erpromotion_firstBackgroundBody);                /*添加事务管理器*/                btn_firstBackground.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        Toast.makeText(mContext, "第一个图片被点击", Toast.LENGTH_SHORT).show();                        clear();/*尝试清空操作*/                        /*开始构造web_values_act的入口参数*/                        WEB_VALUES_ACT web_values_act = new WEB_VALUES_ACT("http://www.baidu.com");                    }                });                /*整理标题*/                first_title.setText(MerchantXmlList.get(0).getTitle());                second_title.setText(MerchantXmlList.get(1).getTitle());                three_title.setText(MerchantXmlList.get(2).getTitle());                four_title.setText(MerchantXmlList.get(3).getTitle());                /*整理标语*/                first_text.setText(MerchantXmlList.get(0).getText());                second_text.setText(MerchantXmlList.get(1).getText());                three_text.setText(MerchantXmlList.get(2).getText());                four_text.setText(MerchantXmlList.get(3).getText());                /*整理状态*/                first_status.setText(MerchantXmlList.get(0).getStatus());                second_status.setText(MerchantXmlList.get(1).getStatus());                three_status.setText(MerchantXmlList.get(2).getStatus());                four_status.setText(MerchantXmlList.get(3).getStatus());            }        });    }    /**     * 停止更新View     */    public void pasue() {    }    /**     * 清空View中的所有的资源 释放内存  放置OOM     */    public void clear() {        if (viewidPage != null) {            /*清空第一个背景框资源*/            /*清空所有的资源*/            if (viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().getChildAt(0) != null) {                viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().removeAllViews();            } else {                Log.e(MSG, "第一个控件上的View已经被清空");            }            if (viewidPage.getMERCHANTMONITOR_SECONDBACKGROUND().getChildAt(0) != null) {                viewidPage.getMERCHANTMONITOR_SECONDBACKGROUND().removeAllViews();            } else {                Log.e(MSG, "第二个控件上的View已经被清空");            }            if (viewidPage.getMERCHANTMONITOR_THREEBACKGROUND().getChildAt(0) != null) {                viewidPage.getMERCHANTMONITOR_THREEBACKGROUND().removeAllViews();            } else {                Log.e(MSG, "第三个控件上的View已经被清空");            }            if (viewidPage.getMERCHANTMONITOR_FOURBACKGROUND().getChildAt(0) != null) {                viewidPage.getMERCHANTMONITOR_FOURBACKGROUND().removeAllViews();            } else {                Log.e(MSG, "第四个控件上的View已经被清空");            }            /*改变状态*/            _Static = MonitorStatic.CLEAR_DONE;        }    }    public int getStatic() {        return _Static;    }    /**     * 清空了 要重新加载     */    public void reStart() {        Log.i(MSG, "开始第二次加载");        /*改变现在的状态s*/        _Static = MonitorStatic.LOAD_IN;        /*判断BODY是否为空*/        if (viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().getChildAt(0) == null) {            /*重新创建一个ImageView的图片控件*/            ImageView img = new ImageView(viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND()                    .getContext());            /*设置布局参数*/            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout                    .LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);            /*设置布局参数*/            img.setLayoutParams(params);            /*设置图片*/            img.setImageResource(R.drawable.first_back);            /*父布局重新清空加入新的控件*/            viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().removeAllViews();            viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND().addView(img);            //img.setImageResource(R.drawable.);        }        if (viewidPage.getMERCHANTMONITOR_SECONDBACKGROUND().getChildAt(0) == null) {            /*重新创建一个ImageView的图片控件*/            ImageView img = new ImageView(viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND()                    .getContext());            /*设置布局参数*/            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout                    .LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);            /*设置布局参数*/            img.setLayoutParams(params);            /*设置图片*/            img.setImageResource(R.drawable.second_back);            /*父布局重新清空加入新的控件*/            viewidPage.getMERCHANTMONITOR_SECONDBACKGROUND().removeAllViews();            viewidPage.getMERCHANTMONITOR_SECONDBACKGROUND().addView(img);        }        if (viewidPage.getMERCHANTMONITOR_THREEBACKGROUND().getChildAt(0) == null) {            /*重新创建一个ImageView的图片控件*/            ImageView img = new ImageView(viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND()                    .getContext());            /*设置布局参数*/            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout                    .LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);            /*设置布局参数*/            img.setLayoutParams(params);            /*设置图片*/            img.setImageResource(R.drawable.three_back);            /*父布局重新清空加入新的控件*/            viewidPage.getMERCHANTMONITOR_THREEBACKGROUND().removeAllViews();            viewidPage.getMERCHANTMONITOR_THREEBACKGROUND().addView(img);        }        if (viewidPage.getMERCHANTMONITOR_FOURBACKGROUND().getChildAt(0) == null) {            /*重新创建一个ImageView的图片控件*/            ImageView img = new ImageView(viewidPage.getMERCHANTMONITOR_FIRSTBACKGROUND()                    .getContext());            /*设置布局参数*/            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout                    .LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);            /*设置布局参数*/            img.setLayoutParams(params);            /*设置图片*/            img.setImageResource(R.drawable.four_back);            /*父布局重新清空加入新的控件*/            viewidPage.getMERCHANTMONITOR_FOURBACKGROUND().removeAllViews();            viewidPage.getMERCHANTMONITOR_FOURBACKGROUND().addView(img);        }    }}