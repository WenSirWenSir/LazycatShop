package shlm.lmcs.com.lazycat.SuperSystemOS.SuperSystemclass;import android.annotation.SuppressLint;import android.content.Intent;import android.os.Bundle;import android.support.annotation.Nullable;import android.util.Log;import android.view.View;import android.widget.Toast;import org.xmlpull.v1.XmlPullParser;import cn.pedant.SweetAlert.SweetAlertDialog;import io.github.xudaojie.qrcodelib.CaptureActivity;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 授权加盟系统 */public class SystemAdminVip extends LazyCatAct {    private String _vipDay = "";    private String _vipPhone = "";    private String MSG = "SystemAdminVip.java[+]";    private String _getUserStatus = "";    private String _admindAccountStatus = "";    private LocalValues.HTTP_ADDRS http_addrs;    private UserPages _userPages = new UserPages();    @SuppressLint("ResourceType")    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setStatusBar(getResources().getString(R.color.colorVip));        setContentView(R.layout.activity_systemadminvip);        findViewById(R.id.activity_systemAdminVipUserBody).setBackground(Tools.CreateDrawable(3, "#ffffff",                getResources().getString(R.color.colorVip), 10));        http_addrs = new LocalValues.HTTP_ADDRS(SystemAdminVip.this);        init();        listener();    }    private void init() {        Tools.showConfirm(SystemAdminVip.this, "重要提示", "在加盟完毕之后,请别忘记收取加盟服务费用。如果因为您的疏忽,那么由您承担后续责任",                new SweetAlertDialog.OnSweetClickListener() {            @Override            public void onClick(SweetAlertDialog sweetAlertDialog) {                sweetAlertDialog.dismiss();                Intent i = new Intent(SystemAdminVip.this, CaptureActivity.class);                startActivityForResult(i, LocalValues.VALUES_SCAN.VALUES_QR_CODE);            }        });    }    /**     * 监听事件     */    private void listener() {        TextUnt.with(this, R.id.activity_SystemadminVipBtnAdminAccount).setOnClick(new View.OnClickListener() {            @Override            public void onClick(View v) {                if ("".equals(_vipDay) || "".equals(_vipPhone)) {                    Tools.showError(SystemAdminVip.this, "错误信息", "没有扫描数据!");                } else {                    //授权开通                    Tools.showConfirm(SystemAdminVip.this, "重要提示", "确定为" + _userPages.get_shopName() + "激活加盟商特权吗?",                            new SweetAlertDialog.OnSweetClickListener() {                        @Override                        public void onClick(SweetAlertDialog sweetAlertDialog) {                            sweetAlertDialog.dismiss();                            XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getJavaXmlinstanceBuilder(true);                            xmlInstance.setXmlTree(LocalAction.ACTION_VIP_ACTION._JOINVIP, _vipPhone);//设置账户                            xmlInstance.setXmlTree(LocalAction.ACTION_VIP_ACTION._VIPDAY, _vipDay);//使用时间                            xmlInstance.overJavaDom();                            Log.i(MSG, "发送的授权信息为:" + xmlInstance.getXmlTree().trim());                            Net.doPostXml(http_addrs.HTTP_ADDR_SUPER_ADMINVIP, new ProgramInterface() {                                @Override                                public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                                    _refreshDialog.dismiss();                                    Log.i(MSG, "授权开通返回数据为:" + data.trim());                                    XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data);                                    xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                                        @Override                                        public void onFaile() {                                        }                                        @Override                                        public void onStartDocument(String tag) {                                        }                                        @Override                                        public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                                            try {                                                //获取状态                                                if (tag.equals(LocalAction.ACTION_RETURNCODE)) {                                                    _admindAccountStatus = pullParser.nextText().trim();                                                }                                            } catch (Exception e) {                                                e.printStackTrace();                                            }                                        }                                        @Override                                        public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                                        }                                        @Override                                        public void onEndDocument() {                                            if (_admindAccountStatus.equals(LocalValues.NET_OK)) {                                                Tools.showSuccess(SystemAdminVip.this, "授权完成",                                                        "授权:" + _userPages.get_shopName() + "开通授权成功,加盟时间为:" + _vipDay + "(天)");                                            } else {                                                Tools.showError(SystemAdminVip.this, "错误信息",                                                        "授权:" + _userPages.get_shopName() + "开通加盟特权失败");                                            }                                        }                                    });                                }                                @Override                                public WaitDialog.RefreshDialog onStartLoad() {                                    return Tools.getShowwait(SystemAdminVip.this);                                }                                @Override                                public void onFaile(String data, int code) {                                }                            }, xmlInstance.getXmlTree().trim());                        }                    });                }            }        });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (resultCode == RESULT_OK && requestCode == LocalValues.VALUES_SCAN.VALUES_QR_CODE && data != null) {            String result = data.getStringExtra("result");            doGetScandata(result);        } else {        }    }    /**     * 处理扫描结果     *     * @param result     */    private void doGetScandata(String result) {        try {            _vipDay = result.split("\\|")[0];            _vipPhone = result.split("\\|")[1];        } catch (Exception e) {            e.printStackTrace();        }        if ("".equals(_vipDay) || "".equals(_vipPhone)) {            Tools.showError(SystemAdminVip.this, "错误信息", "扫描的二维码是错误的!该二维码没有在云仓库配送中备份过!");        } else {            //获取扫描数据            XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getJavaXmlinstanceBuilder(true);            xmlInstance.initJaveDom();            xmlInstance.setXmlTree(LocalAction.ACTION_VIP_ACTION._JOINVIP, _vipPhone);//设置账户            xmlInstance.overJavaDom();            Log.i(MSG, "提交获取加盟店铺的信息为:" + xmlInstance.getXmlTree());            Net.doPostXml(http_addrs.HTTP_ADDR_GETUSERPAGES, new ProgramInterface() {                @Override                public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                    _refreshDialog.dismiss();                    Log.i(MSG, "加盟授权获取数据:" + data.trim());                    if ("".equals(data)) {                        Tools.showError(SystemAdminVip.this, "错误信息", "扫描的二维码是错误的!该二维码没有在云仓库配送中备份过!");                    } else {                        XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data);                        xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                            @Override                            public void onFaile() {                            }                            @Override                            public void onStartDocument(String tag) {                            }                            @Override                            public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                                try {                                    if (tag.equals(LocalAction.ACTION_RETURNCODE)) {                                        _getUserStatus = pullParser.nextText();                                    }                                    /*设置店铺的名称*/                                    if (tag.equals(LocalAction.ACTION_LOCALUSERPAGE.ACTION_LOCALUSERPAGE_SHOPNAME)) {                                        _userPages.set_shopName(pullParser.nextText().trim());                                    }                                    /*设置店铺所属人*/                                    if (tag.equals(LocalAction.ACTION_LOCALUSERPAGE.ACTION_LOCALUSERPAGE_SHOPUSEPEOPLE)) {                                        _userPages.set_shopPeople(pullParser.nextText().trim());                                    }                                    /*设置店铺的地址*/                                    if (tag.equals(LocalAction.ACTION_LOCALUSERPAGE.ACTION_LOCALUSERPAGE_SHOPADDR)) {                                        _userPages.set_shopAddr(pullParser.nextText().trim());                                    }                                    /*设置账户*/                                    if (tag.equals(LocalAction.ACTION_LOCALUSERPAGE.ACTION_USER)) {                                        _userPages.set_account(pullParser.nextText().trim());                                    }                                } catch (Exception e) {                                    e.printStackTrace();                                }                            }                            @Override                            public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                            }                            @Override                            public void onEndDocument() {                                //设置账户                                TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipShopAccount).                                        setText(_userPages.get_account());                                //设置店铺所属人                                TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipShopUsepeople).                                        setText(_userPages.get_shopPeople());                                //设置店铺的名称                                TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipShopName).                                        setText(_userPages.get_shopName());                                //设置地址                                TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipShopaddr).                                        setText(_userPages.get_shopAddr());                                //设置天数                                TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipUseDay).setText(_vipDay + "(天)");                                if ("7".equals(_vipDay)) {                                    TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipPaymoney).setText(                                            "21(RMB)");                                } else if ("30".equals(_vipDay)) {                                    TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipPaymoney).setText(                                            "68(RMB)");                                } else if ("180".equals(_vipDay)) {                                    TextUnt.with(SystemAdminVip.this, R.id.activity_SystemadminVipPaymoney).setText(                                            "390(RMB)");                                }                            }                        });                    }                }                @Override                public WaitDialog.RefreshDialog onStartLoad() {                    return Tools.getShowwait(SystemAdminVip.this);                }                @Override                public void onFaile(String data, int code) {                }            }, xmlInstance.getXmlTree().toString());        }    }    /**     * 用户表格     */    class UserPages {        public String _account;/*授权账户*/        public String _shopName;/*商品名称*/        public String _shopPeople;/*所属人*/        public String _shopAddr;/*地址*/        public String get_account() {            return _account;        }        public void set_account(String _account) {            this._account = _account;        }        public String get_shopName() {            return _shopName;        }        public void set_shopName(String _shopName) {            this._shopName = _shopName;        }        public String get_shopPeople() {            return _shopPeople;        }        public void set_shopPeople(String _shopPeople) {            this._shopPeople = _shopPeople;        }        public String get_shopAddr() {            return _shopAddr;        }        public void set_shopAddr(String _shopAddr) {            this._shopAddr = _shopAddr;        }    }}