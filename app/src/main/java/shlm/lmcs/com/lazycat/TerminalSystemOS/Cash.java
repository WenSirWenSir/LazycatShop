package shlm.lmcs.com.lazycat.TerminalSystemOS;import android.content.Context;import android.util.Log;import org.xmlpull.v1.XmlPullParser;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;/** * 申请提现的获取数据和检查 */public class Cash {    private static String MSG = "Cash.java[+]";    private static Cashpages _Cashpages = new Cashpages();    private static String return_code = "";    public static void _start(final Context _context, final onCashe _OnCashe) {        LocalValues.HTTP_ADDRS http_addrs = new LocalValues.HTTP_ADDRS(_context);        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getJavaXmlinstanceBuilder(true);        xmlInstance.overJavaDom();        Net.doPostXml(http_addrs.HTTP_ADDR_TERMINALSYSTEM_OS_TOCASH, new ProgramInterface() {            @Override            public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                _refreshDialog.dismiss();                Log.i(MSG, "申请兑换积分返回数据:" + data.trim());                if (data.equals(LocalValues.NET_ERROR)) {                    /*服务器错误*/                    _OnCashe._onError();                } else {                    /*存在银行卡*/                    XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                    xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                        @Override                        public void onFaile() {                        }                        @Override                        public void onStartDocument(String tag) {                        }                        @Override                        public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                            try {                                /*返回状态*/                                if (tag.equals(LocalAction.ACTION_RETURNCODE)) {                                    return_code = pullParser.nextText().trim();                                }                                /*所属银行*/                                if (tag.equals(LocalAction.ACTION_CASH.BANK_INFO)) {                                    _Cashpages._bankInfo = pullParser.nextText().trim();                                }                                /*用户名称*/                                if (tag.equals(LocalAction.ACTION_CASH.BANK_PEOPLE)) {                                    _Cashpages._bankPeople = pullParser.nextText().trim();                                }                                /*用户的电话*/                                if (tag.equals(LocalAction.ACTION_CASH.BANK_TEL)) {                                    _Cashpages._bankTel = pullParser.nextText().trim();                                }                                /*用户的卡号*/                                if (tag.equals(LocalAction.ACTION_CASH.BANK_CARD)) {                                    _Cashpages._bankCard = pullParser.nextText().trim();                                }                                /*能使用的积分*/                                if (tag.equals(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_INTEGRAL)) {                                    if (Float.parseFloat(pullParser.nextText()) > 0) {                                        _Cashpages._integral = pullParser.nextText().trim();                                    } else {                                        _Cashpages._integral = "0";                                    }                                }                                /*被冻结的积分*/                                if (tag.equals(LocalAction.ACTION_INTEGRAL.INTEGRAL_FROZEN)) {                                    _Cashpages._frozenIntegral = pullParser.nextText().trim();                                }                            } catch (Exception e) {                            }                        }                        @Override                        public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                        }                        @Override                        public void onEndDocument() {                            if (return_code.equals(LocalValues.VALUES_USERCENTER.LOGIN_ERROR)) {                                _OnCashe._onNologin();                            } else if (return_code.equals(LocalValues.NET_OK)) {                                _OnCashe._onGet(_Cashpages);                            } else if (return_code.equals(LocalValues.VALUES_CASH._NOTBANK_CARD)) {                                _OnCashe._onNoBank();                            }                        }                    });                }            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                /*初始化一个DIALOG*/                return Tools.getShowwait(_context);            }            @Override            public void onFaile(String data, int code) {            }        }, xmlInstance.getXmlTree().trim());    }    /**     * 提供给外面的接口     */    public interface onCashe {        void _onGet(Cashpages _Cashpages);/*获取成功*/        void _onError();/*服务器错误*/        void _onNologin();/*没有登录*/        void _onNoBank();/*没有银行卡信息*/    }    /**     * 用户提现的表格     */    public static class Cashpages {        public String _bankInfo;/*哪个银行*/        public String _bankCard;/*卡号*/        public String _bankPeople;/*联系人*/        public String _bankTel;/*电话*/        public String _integral;/*可以使用的积分*/        public String _frozenIntegral;/*冻结的积分*/    }}