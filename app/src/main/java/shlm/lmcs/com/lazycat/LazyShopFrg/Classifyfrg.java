package shlm.lmcs.com.lazycat.LazyShopFrg;import android.annotation.SuppressLint;import android.os.Bundle;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import org.xmlpull.v1.XmlPullParser;import java.util.ArrayList;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyClass.LazyCatFragment;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;public class Classifyfrg extends LazyCatFragment {    private String MSG = "Classifyfrg.java[+]";    private ListView classifyfrg_title, classifyfrg_body;    private ArrayList<String> calssify_title = new ArrayList<String>();    private TextView classify_title;    private LinearLayout list_bodysecondlevel_title;/*二级的标题*/    @SuppressLint("NewApi")    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle            savedInstanceState) {        View item = inflater.inflate(R.layout.fragment_classify, null);        /*显示的类型的标题*/        classify_title = item.findViewById(R.id.fragmen_classify_title);        /*二级标题*/        list_bodysecondlevel_title = item.findViewById(R.id                .fragmen_classify_listview_body_secondlevelTitle);        calssify_title.clear();        calssify_title.add("休闲食品");        calssify_title.add("水乳饮品");        calssify_title.add("方便食品");        calssify_title.add("酒水宴席");        calssify_title.add("粮油调味");        calssify_title.add("文具办公");        calssify_title.add("家用电器");        calssify_title.add("数码通讯");        calssify_title.add("计生用品");        calssify_title.add("冲调保健");        calssify_title.add("纸品家清");        calssify_title.add("个护美妆");        calssify_title.add("日化清洁");        calssify_title.add("毛巾护理");        calssify_title.add("妇女卫生");        calssify_title.add("干货精选");        /**         * 初始化 就加载第一个界面         */        Net.doGet(getContext(), LocalValues.HTTP_ADDRS.HTTP_ADDR_GET_SHOPCLASSIFY, new Net                .onVisitInterServiceListener() {            @Override            public WaitDialog.RefreshDialog onStartLoad() {                return null;            }            @Override            public void onSucess(String tOrgin, WaitDialog.RefreshDialog _RefreshDialog) {                Log.i(MSG, "获取到的数据为:" + tOrgin.trim());                handlerXml(tOrgin.trim());            }            @Override            public void onNotConnect() {            }            @Override            public void onFail(String tOrgin) {            }        }, LocalAction.CLASSIFY_ACTION.ACTION_INTO, LocalAction.CLASSIFY_ACTION.ACTION_SHOP_SNACKS);        TextUnt.with(classify_title).setText(calssify_title.get(0).trim());        for (int i = 0; i < 100; i++) {            TextView title = new TextView(list_bodysecondlevel_title.getContext());            title.setPadding(10, 5, 10, 5);            title.setText("" + i);            list_bodysecondlevel_title.addView(title);        }        init(item);        return item;    }    private void handlerXml(String _xml) {        XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(_xml);        xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {            @Override            public void onFaile() {            }            @Override            public void onStartDocument(String tag) {            }            @Override            public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {            }            @Override            public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {            }            @Override            public void onEndDocument() {            }        });    }    private void init(View _item) {        /*找到控件*/        classifyfrg_title = _item.findViewById(R.id.fragmen_classify_listview_title);/*显示分类标题的*/        final titleAdapter _titlTitleAdapter = new titleAdapter(calssify_title);        classifyfrg_title.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @SuppressLint("NewApi")            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                TitleView_adapter titleView_adapter = (TitleView_adapter) view.getTag();                _titlTitleAdapter.onClickItem(position);                if (titleView_adapter != null) {                    /*数据不为空 就去更新标题*/                    TextUnt.with(classify_title).setText(titleView_adapter.title);                } else {                }            }        });        classifyfrg_title.setAdapter(_titlTitleAdapter);        classifyfrg_body = _item.findViewById(R.id.fragmen_classify_listview_body);/*显示内容*/    }    @SuppressLint("NewApi")    class titleAdapter extends BaseAdapter {        private ArrayList<String> title_list = new ArrayList<String>();        private int _position;        public void onClickItem(int position) {            this._position = position;            notifyDataSetChanged();        }        public titleAdapter(ArrayList<String> _title_list) {            this.title_list.clear();            this.title_list = _title_list;        }        @Override        public int getCount() {            return this.title_list.size();        }        @Override        public Object getItem(int position) {            return null;        }        @Override        public long getItemId(int position) {            return 0;        }        @Override        public View getView(int position, View convertView, ViewGroup parent) {            TextView title = new TextView(getContext());            title.setPadding(13, 23, 13, 23);            TitleView_adapter titleView_adapter = new TitleView_adapter();            titleView_adapter.title = this.title_list.get(position).trim();            if (_position == position) {                TextUnt.with(title).setTextColor("#ffffff").setTextSize(15).setBackColor("#f30d66");            } else {                TextUnt.with(title).setTextColor("#000000").setTextSize(15);            }            ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams                    .MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);            title.setLayoutParams(params);            title.setTag(titleView_adapter);            title.setGravity(Gravity.CENTER);            title.setText(this.title_list.get(position));            return title;        }    }    class TitleView_adapter {        String title;    }}