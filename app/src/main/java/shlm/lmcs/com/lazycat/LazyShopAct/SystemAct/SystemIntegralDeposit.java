package shlm.lmcs.com.lazycat.LazyShopAct.SystemAct;import android.annotation.SuppressLint;import android.app.AlertDialog;import android.graphics.Color;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.widget.EditText;import org.xmlpull.v1.XmlPullParser;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyPage.WAIT_ITME_DIALOGPAGE;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 提交提现积分请求 */public class SystemIntegralDeposit extends LazyCatAct {    private String MSG = "SystemIntegralDeposit.java[+]";    /**     * 提现的输入框     */    private EditText et_money;    /**     * 如果有数据保存的值     */    private String st_bankname;    private String st_bankcard;    private String st_bankpeople;    private String st_banktel;    private LocalValues.HTTP_ADDRS http_addrs;    @Override    protected void onCreate(Bundle savedInstanceState) {        setTransparentBar();        setContentView(R.layout.activity_integraldeposit);        et_money = findViewById(R.id.activity_integraldepositEditMoney);        http_addrs = new LocalValues.HTTP_ADDRS(getApplicationContext());        /*判断用户是否已经有存在银行卡了*/        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder(true);        xmlInstance.overDom();        Net.doPostXml( http_addrs.HTTP_ADDR_GETBANKS, new                ProgramInterface() {            @Override            public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                _refreshDialog.dismiss();                Log.i(MSG,"申请兑换积分获取银行卡信息返回数据信息:" + data.trim());                if (data.equals(LocalValues.NET_ERROR)) {                    /*没有绑定银行卡*/                } else {                    /*存在银行卡*/                    XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                    xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                        @Override                        public void onFaile() {                        }                        @Override                        public void onStartDocument(String tag) {                        }                        @Override                        public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                            try {                                /*所属银行*/                                if (tag.equals(LocalAction.ACTION_BANKS.BANK_NAME)) {                                    st_bankname = pullParser.nextText().trim();                                }                                /*用户名称*/                                if (tag.equals(LocalAction.ACTION_BANKS.BANK_PEOPLE)) {                                    st_bankpeople = pullParser.nextText().trim();                                }                                /*用户的电话*/                                if (tag.equals(LocalAction.ACTION_BANKS.BANK_TEL)) {                                    st_banktel = pullParser.nextText().trim();                                }                                /*用户的卡号*/                                if (tag.equals(LocalAction.ACTION_BANKS.BANK_CARD)) {                                    st_bankcard = pullParser.nextText().trim();                                }                            } catch (Exception e) {                            }                        }                        @Override                        public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                        }                        @Override                        public void onEndDocument() {                            init();                            listener();                        }                    });                }            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                /*初始化一个DIALOG*/                final WaitDialog.RefreshDialog refreshDialog = new WaitDialog.RefreshDialog                        (SystemIntegralDeposit.this);                WAIT_ITME_DIALOGPAGE wait_itme_dialogpage = new WAIT_ITME_DIALOGPAGE();                wait_itme_dialogpage.setImg(R.id.item_wait_img);                wait_itme_dialogpage.setView(R.layout.item_wait);                wait_itme_dialogpage.setCanClose(false);                wait_itme_dialogpage.setTitle(R.id.item_wait_title);                refreshDialog.Init(wait_itme_dialogpage);                refreshDialog.showRefreshDialog("加载中...", false);                return refreshDialog;            }            @Override            public void onFaile(String data, int code) {            }        }, xmlInstance.getXmlTree().trim());        super.onCreate(savedInstanceState);    }    /**     * 系统初始化     */    @SuppressLint({"ResourceType", "NewApi"})    private void init() {        /*整理界面*/        TextUnt.with(this, R.id.assembly_act_headTitle).setText("积分兑现金");        /*设置标题的颜色*/        findViewById(R.id.assembly_act_headBody).setBackgroundColor(Color.parseColor("#efefef"));        /*设置点击提现按钮的样式*/        TextUnt.with(this, R.id.activity_integraldepositBtnDeposit).setBackground(Tools                .CreateDrawable(1, getResources().getString(R.color.ThemeColor), getResources()                        .getString(R.color.ThemeColor), 50));        /*设置用户的银行卡所属银行和后六位*/        TextUnt.with(this, R.id.activity_integraldepositBanksAndCard).setText(st_bankname + ":" +                st_bankcard.substring(st_bankcard.length() - 4, st_bankcard.length()));        /*设置提现的边框*/        findViewById(R.id.activity_integraldepositBody).setBackground(Tools.CreateDrawable(1,                "#ffffff", "#ffffff", 10));        /**         * 开始获取用户的银行卡号码         */    }    /**     * 系统的监听     */    private void listener() {        /**         * 点击积分兑换的按钮的监听事件         *         */        findViewById(R.id.activity_integraldepositBtnDeposit).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                /*开始提交申请请求*/                XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder(true);                xmlInstance.setXmlTree(LocalAction.ACTION_INTEGRAL.INTEGRAL_USE, et_money.getText                        ().toString().trim());                xmlInstance.overDom();                Net.doPostXml( "", new ProgramInterface() {                    @Override                    public void onSucess(String data, int code, WaitDialog.RefreshDialog                            _refreshDialog) {                        _refreshDialog.dismiss();                        Log.i(MSG, "申请提现服务器数据:" + data.trim());                    }                    @Override                    public WaitDialog.RefreshDialog onStartLoad() {                        /*初始化一个DIALOG*/                        final WaitDialog.RefreshDialog refreshDialog = new WaitDialog                                .RefreshDialog(SystemIntegralDeposit.this);                        WAIT_ITME_DIALOGPAGE wait_itme_dialogpage = new WAIT_ITME_DIALOGPAGE();                        wait_itme_dialogpage.setImg(R.id.item_wait_img);                        wait_itme_dialogpage.setView(R.layout.item_wait);                        wait_itme_dialogpage.setCanClose(false);                        wait_itme_dialogpage.setTitle(R.id.item_wait_title);                        refreshDialog.Init(wait_itme_dialogpage);                        refreshDialog.showRefreshDialog("加载中...", false);                        return refreshDialog;                    }                    @Override                    public void onFaile(String data, int code) {                    }                }, xmlInstance.getXmlTree().trim());            }        });    }}