package shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools;import android.app.Activity;import android.view.View;import java.util.ArrayList;import static shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.handlerView._view;public class ViewSet {    /**     * 必须先调用的方法     *     * @param _view     * @return     */    public static handlerView with(View _view) {        handlerView _handlerView = new handlerView();        return _handlerView.get(_view);    }    /**     * 用窗口来找到VIEW     *     * @param _activity 窗口     * @param _id       控件ID     * @return     */    public static handlerView with(Activity _activity, int _id) {        View _view = _activity.findViewById(_id);        handlerView _handlerView = new handlerView();        return _handlerView.get(_view);    }    /**     * 根据数组来控制一群控件     *     * @return     */    public static handlerView with(Activity _activity, ArrayList<Integer> _arId) {        handlerView _handlerView = new handlerView();        ArrayList<View> arViews = new ArrayList<View>();        arViews.clear();        for (int i = 0; i <= _arId.size(); i++) {            View view = _activity.findViewById(_arId.get(_arId.size()));            arViews.add(view);        }        return _handlerView.get(arViews);    }    /**     * 根据数组来控制一群控件     *     * @return     */    public static handlerView with(View _body, ArrayList<Integer> _arId) {        handlerView _handlerView = new handlerView();        ArrayList<View> arViews = new ArrayList<View>();        arViews.clear();        for (int i = 0; i < _arId.size(); i++) {            View view = _body.findViewById(_arId.get(i));            arViews.add(view);        }        return _handlerView.get(arViews);    }}