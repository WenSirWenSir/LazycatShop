package shlm.lmcs.com.lazycat.LazyShopAct.SystemAct;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Toast;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyShopTools.LocalProgramTools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 拒绝某个商品  不签单支付金额 */public class SystemRefuseshop extends LazyCatAct {    private String orderNumber;    private LocalProgramTools.UserToolsInstance userToolsInstance;/*用户的工具类*/    private String MSG = "SystemRefuseshop";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setTransparentBar();        setContentView(R.layout.activity_systemrefuseshop);        TextUnt.with(this, R.id.assembly_act_headTitle).setText("填写拒单原因");        orderNumber = getBundlerValue(LocalAction.WINDOWS_TO_WINDOWS.ACTION_ORDERNUMBER);        userToolsInstance = LocalProgramTools.getUserToolsInstance();/*获取工具类的实例对象*/        init();        listener();    }    private void listener() {        findViewById(R.id.assembly_act_headBackImg).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });    }    public void init() {        /*判断是否登录*/        if (!userToolsInstance.isLogin()) {            Toast.makeText(getApplicationContext(), "您还没有登录过仓库网络哦", Toast.LENGTH_SHORT).show();            finish();        } else {            XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder();            xmlInstance.initDom();            xmlInstance.setXmlTree(LocalAction.ACTION_LOGIN.ACTION_PHONE, userToolsInstance                    .GetUserpageOnAction(LocalAction.ACTION_LOCALUSERPAGE                            .ACTION_LOCALUSERPAGE_ACCOUNT));/*设置手机号*/            xmlInstance.setXmlTree(LocalAction.ACTION_LOGIN.ACTION_TOKEN, userToolsInstance                    .GetUserpageOnAction(LocalAction.ACTION_LOCALUSERPAGE                            .ACTION_LOCALUSERPAGE_TOKEN));                            /*设置TOKEN*/            xmlInstance.setXmlTree(LocalAction.ACTION_SENDORDER_SYSTEM.ACTION_ORDERNUMBER,                    orderNumber);/*设置订单号*/            xmlInstance.overDom();            Net.doPostXml(getApplicationContext(), LocalValues.HTTP_ADDRS.HTTP_ADDR_TOREFUSESHOP,                    new ProgramInterface() {                @Override                public void onSucess(String data, int code, WaitDialog.RefreshDialog                        _refreshDialog) {                    Log.e(MSG, "提交数据返回:" + data.trim());                    if (data.equals(LocalValues.NET_ERROR)) {                        Toast.makeText(getApplicationContext(), "没有获取到订单数据,请联系管理人员", Toast                                .LENGTH_SHORT).show();                    } else {                    }                }                @Override                public WaitDialog.RefreshDialog onStartLoad() {                    return null;                }                @Override                public void onFaile(String data, int code) {                }            }, xmlInstance.getXmlTree());        }    }}