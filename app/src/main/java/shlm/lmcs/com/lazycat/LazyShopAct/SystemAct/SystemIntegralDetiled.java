package shlm.lmcs.com.lazycat.LazyShopAct.SystemAct;import android.annotation.SuppressLint;import android.graphics.Color;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ArrayAdapter;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.bumptech.glide.load.engine.DiskCacheStrategy;import org.xmlpull.v1.XmlPullParser;import java.util.ArrayList;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 积分明细 */public class SystemIntegralDetiled extends LazyCatAct {    private ListView detiled_listView;    private String MSG = "SystemIntegralDetiled.java[+]";    private Integralpages integralpages;    private ArrayList<Integralpages> ar_list = new ArrayList<Integralpages>();    private String _RETURNCODE = "";    private LocalValues.HTTP_ADDRS http_addrs;    @Override    protected void onCreate(Bundle savedInstanceState) {        setStatusBar("#efefef");        setContentView(R.layout.activity_integraldetiled);        http_addrs = new LocalValues.HTTP_ADDRS(SystemIntegralDetiled.this);        detiled_listView = findViewById(R.id.activity_integraldetiledListview);        findViewById(R.id.assembly_act_headBody).setBackgroundColor(Color.parseColor("#ededed"));        TextUnt.with(this, R.id.assembly_act_headTitle).setText("积分明细");        init();        super.onCreate(savedInstanceState);    }    @SuppressLint("ResourceType")    private void init() {        setBackListener(R.id.assembly_act_headBackImg);        /**         * 获取积分数据信息         */        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getJavaXmlinstanceBuilder(true);        xmlInstance.setXmlTree(LocalAction.TAG, "1");        xmlInstance.overJavaDom();        Net.doPostXml(http_addrs.HTTP_ADDR_GETINTEGRALDETILED, new ProgramInterface() {            @Override            public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                Log.i(MSG, "获取积分的所有记录返回数据:" + data);                _refreshDialog.dismiss();                if ("".equals(data)) {                    Tools.showError(SystemIntegralDetiled.this, "错误信息", "无法访问数据,请确定您已经登录了系统!");                } else {                    //开始解析数据信息                    XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data);                    xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                        @Override                        public void onFaile() {                        }                        @Override                        public void onStartDocument(String tag) {                        }                        @Override                        public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                            try {                                /*回传状态*/                                if (tag.equals(LocalAction.ACTION_RETURNCODE)) {                                    _RETURNCODE = pullParser.nextText().trim();                                }                                /*判断是否是INTEGRAL的开头*/                                if (tag.equals(LocalAction.ACTION_INTEGRAL.TAG_INTEGRALBEGIN)) {                                    integralpages = new Integralpages();                                }                                /*获取商品的标题*/                                if (tag.equals(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_TITLE)) {                                    integralpages.set_title(pullParser.nextText().trim());                                }                                /*获取商品的订单时间*/                                if (tag.equals(LocalAction.ACTION_SENDORDER_SYSTEM.TAG_ORDERTIME)) {                                    integralpages.set_time(pullParser.nextText().trim());                                }                                /*获取状态*/                                if (tag.equals(LocalAction.ACTION_INTEGRAL.TAG_INTEGRALSTATUS)) {                                    integralpages.set_integralStaus(pullParser.nextText().trim());                                }                                /*获取图片地址*/                                if (tag.equals(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_IMG)) {                                    integralpages.set_img(pullParser.nextText().trim());                                }                                /*获取积分*/                                if (tag.equals(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_INTEGRAL)) {                                    integralpages.set_integral(pullParser.nextText().trim());                                }                            } catch (Exception e) {                                e.printStackTrace();                            }                        }                        @Override                        public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                            if (tag.equals(LocalAction.ACTION_INTEGRAL.TAG_INTEGRALBEGIN)) {                                ar_list.add(integralpages);                                integralpages = null;                            }                        }                        @Override                        public void onEndDocument() {                            if (_RETURNCODE.equals(LocalValues.NET_OK)) {                                IntegralDetiled integralDetiled = new IntegralDetiled();                                detiled_listView.setAdapter(integralDetiled);                            } else {                                Tools.showError(SystemIntegralDetiled.this, "错误信息", "无法访问数据,请确定您已经登录了系统!");                            }                        }                    });                }            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                return Tools.getShowwait(SystemIntegralDetiled.this);            }            @Override            public void onFaile(String data, int code) {            }        }, xmlInstance.getXmlTree().trim());    }    class IntegralDetiled extends BaseAdapter {        @Override        public int getCount() {            return ar_list.size();        }        @Override        public Object getItem(int position) {            return position;        }        @Override        public long getItemId(int position) {            return position;        }        @SuppressLint("ResourceType")        @Override        public View getView(int position, View convertView, ViewGroup parent) {            final ValuesId valuesId;            if (convertView != null) {                valuesId = (ValuesId) convertView.getTag();            } else {                convertView = LayoutInflater.from(getApplicationContext()).inflate(R.layout.item_integraldetiled, null);                valuesId = new ValuesId();                valuesId._body = convertView.findViewById(R.id.item_integraldetiledBody);                valuesId._img = convertView.findViewById(R.id.item_integraldetiledImg);                valuesId.btn_Details = convertView.findViewById(R.id.item_integraldetiledBtnDetails);                convertView.setTag(valuesId);            }            /*设置背景的圆角*/            valuesId._body.setBackground(Tools.CreateDrawable(1, "#ffffff", "#ffffff", 10));            switch (ar_list.get(position).get_integralStaus()) {                /*可以被使用的积分*/                case LocalValues.VALUES_INTEGRAL.INTEGRAL_STATUS_USER:                    //设置数据信息                    TextUnt.with(convertView, R.id.item_integraldetiledOrdertime).setText(ar_list.get(position).get_time());                    TextUnt.with(convertView, R.id.item_integraldetiledIntegralNumber).setText("+" + ar_list.get(position).get_integral());                    TextUnt.with(convertView, R.id.item_integraldetiledTitle).setText(ar_list.get(position).get_title());                    break;                /*提现*/                case LocalValues.VALUES_INTEGRAL.INTEGRAL_STATUS_CASH:                    //设置数据信息                    Toast.makeText(getApplicationContext(), "使用积分", Toast.LENGTH_LONG).show();                    TextUnt.with(convertView, R.id.item_integraldetiledOrdertime).setText(ar_list.get(position).get_time());                    TextUnt.with(convertView, R.id.item_integraldetiledIntegralNumber).setText("-" + ar_list.get(position).get_integral());                    TextUnt.with(convertView, R.id.item_integraldetiledTitle).setText("使用积分");                    TextUnt.with(convertView, R.id.item_integraldetiledIntegralStatus).setText("积分冻结").setTextColor(getResources().getString(R.color.colornoVip));                    break;                /*冻结*/                case LocalValues.VALUES_INTEGRAL.INTEGRAL_STATUS_FROZEN:                    //设置数据信息                    TextUnt.with(convertView, R.id.item_integraldetiledOrdertime).setText(ar_list.get(position).get_time());                    TextUnt.with(convertView, R.id.item_integraldetiledIntegralNumber).setText("+" + ar_list.get(position).get_integral()).setTextColor(getResources().getString(R.color.colornoVip));                    TextUnt.with(convertView, R.id.item_integraldetiledTitle).setText(ar_list.get(position).get_title());                    break;            }            //加载图片信息            Glide.with(getApplicationContext()).load(http_addrs.HTTP_ADDR_PROGRAM_IMGSERVICE + ar_list.get(position).get_img()).diskCacheStrategy(DiskCacheStrategy.NONE).skipMemoryCache(false).into(valuesId._img);            /**             * 设置监听事件             */            TextUnt.with(valuesId.btn_Details).setOnClick(new View.OnClickListener() {                @Override                public void onClick(View v) {                    LazyCatActStartActivity(SystemaboutIntegral.class, false);                }            });            return convertView;        }        class ValuesId {            LinearLayout _body;            ImageView _img;            TextView btn_Details;/*显示详情的按钮*/        }    }    /**     * 处理积分的类表格     */    class Integralpages {        String _integral;        String _integralStaus;        String _title;        String _time;        String _img;        public String get_img() {            return _img;        }        public void set_img(String _img) {            this._img = _img;        }        public String get_integral() {            return _integral;        }        public void set_integral(String _integral) {            this._integral = _integral;        }        public String get_integralStaus() {            return _integralStaus;        }        public void set_integralStaus(String _integralStaus) {            this._integralStaus = _integralStaus;        }        public String get_title() {            return _title;        }        public void set_title(String _title) {            this._title = _title;        }        public String get_time() {            return _time;        }        public void set_time(String _time) {            this._time = _time;        }    }}