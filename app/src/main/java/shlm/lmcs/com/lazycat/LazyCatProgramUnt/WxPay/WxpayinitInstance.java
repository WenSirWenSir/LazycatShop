package shlm.lmcs.com.lazycat.LazyCatProgramUnt.WxPay;import android.content.Context;import android.util.Log;import android.widget.Toast;import com.tencent.mm.opensdk.modelpay.PayReq;import com.tencent.mm.opensdk.openapi.IWXAPI;import com.tencent.mm.opensdk.openapi.WXAPIFactory;import java.util.LinkedList;import java.util.List;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;public class WxpayinitInstance {    private String MSG = "WxpayinitInstance.java[+]";    private String ATTACH;/*外面传入的参数*/    private String BODY;/*外面传入的参数*/    private String MCH_ID = "1499072172";    private String NONCE_STR;/*外面传入的参数*/    private String NOTIFY_URL = "http://www.baidu.com";    private String OUT_TRADE_NO;/*外面传入的参数*/    private String SPBILL_CREATE_IP = "127.0.0.1";    private String TOTAL_FEE;/*外面传入的参数*/    private String TRADE_TYPE;/*外面传入的参数*/    private String APP_ID = "wxbfc4618cf0bd4b88";    private Context CONTEXT;    public WxpayinitInstance(Context _context, String _attach, String _body, String _nonce_str,                             String _outtradeno, String _totalfee, String _trade_type) {        this.ATTACH = _attach;        this.BODY = _body;        this.NONCE_STR = _nonce_str;        this.OUT_TRADE_NO = _outtradeno;        this.TOTAL_FEE = _totalfee;        this.TRADE_TYPE = _trade_type;        this.CONTEXT = _context;    }    public String getXmldata() {        /**         * 整理listView         */        List<SingValues> signvalues = new LinkedList<SingValues>();        /**         * 创建表格 获取SIGN         */        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_APPID, APP_ID));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_ATTACH, ATTACH));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_BODY, this.BODY));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_MCH_ID, this.MCH_ID));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_NONCE_STR, this.NONCE_STR));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_NOTIFY_URL, this.NOTIFY_URL));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_OUT_TRADE_NO, this                .OUT_TRADE_NO));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_SPBILL_CREATE_IP, this                .SPBILL_CREATE_IP));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_TOTAL_FEE, this.TOTAL_FEE));        signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_TRADE_TYPE, this.TRADE_TYPE));        XmlBuilder.XmlInstance xmlInstance = new XmlBuilder.XmlInstance();        xmlInstance.initDom();        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_APPID, APP_ID);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_ATTACH, ATTACH);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_BODY, this.BODY);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_MCH_ID, this.MCH_ID);/*商户号*/        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_NONCE_STR, this.NONCE_STR);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_NOTIFY_URL, this.NOTIFY_URL);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_OUT_TRADE_NO, this.OUT_TRADE_NO);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_SPBILL_CREATE_IP, this                .SPBILL_CREATE_IP);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_TOTAL_FEE, this.TOTAL_FEE);        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_TRADE_TYPE, this.TRADE_TYPE);        xmlInstance.setXmlTree("sign", Utils.getSign(signvalues));        xmlInstance.overDom();        return xmlInstance.getXmlTree().trim();    }    /**     * 微信支付开始     */    public void startWxPay(String _prepayId) {        /*开始微信注册支付*/        Log.i(MSG, "开始微信支付");        try {            PayReq req = new PayReq();            req.appId = this.APP_ID;            Log.i(MSG, "APPID" + this.APP_ID);            req.partnerId = this.MCH_ID;            Log.i(MSG, "MCH_ID" + this.MCH_ID);            req.prepayId = _prepayId;            Log.i(MSG, "PREPAYID" + _prepayId);            req.packageValue = "Sign=WXPay";            req.nonceStr = this.NONCE_STR;            Log.i(MSG, "NONCE_STR" + this.NONCE_STR);            req.timeStamp = String.valueOf(getTimeStamp());            Log.i(MSG, "timeStamp" + req.timeStamp);            List<SingValues> signvalues = new LinkedList<SingValues>();            signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_APPID, req.appId));            signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_NONCE_STR, req.nonceStr));            signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_PACKAGE, req                    .packageValue));            signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_PARTNERID, req                    .partnerId));            signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_PREPAYID, req.prepayId));            signvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_TIMESTAMP, req                    .timeStamp));            req.sign = Utils.getSign(signvalues);            IWXAPI api = WXAPIFactory.createWXAPI(this.CONTEXT, this.APP_ID);            api.sendReq(req);            Log.i(MSG, "微信调用支付API");        } catch (Exception e) {            Log.e(MSG, "微信调用支付API错误：" + e.getMessage());            Toast.makeText(this.CONTEXT, "微信支付调用失败", Toast.LENGTH_SHORT).show();        }    }    /*获取系统时间瘥*/    private long getTimeStamp() {        return System.currentTimeMillis() / 1000;    }}