package shlm.lmcs.com.lazycat.LazyShopTools;import android.annotation.SuppressLint;import android.app.Activity;import android.util.Log;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;public class LocalProgramShopTools {    private String MSG = "LocalProgramShopTools.java[+]";    private String St_status = "";/*状态信息*/    private String St_dottenPrice = ""; /*虚线的价格*/    private String St_tp = "";/*批发价格*/    /*控件ID*/    private int Ve_status = 0;/*状态的控件ID*/    private int Ve_dotten = 0;/*虚线的控件ID*/    private int Ve_tp = 0;/*批发的控件ID*/    /*上下文对象*/    private Activity At_activity;/*窗口*/    public Activity getAt_activity() {        return At_activity;    }    public void setAt_activity(Activity at_activity) {        At_activity = at_activity;    }    public String getSt_status() {        return St_status;    }    public void setSt_status(String st_status) {        St_status = st_status;    }    public String getSt_dottenPrice() {        return St_dottenPrice;    }    public void setSt_dottenPrice(String st_dottenPrice) {        St_dottenPrice = st_dottenPrice;    }    public String getSt_tp() {        return St_tp;    }    public void setSt_tp(String st_tp) {        St_tp = st_tp;    }    public int getVe_status() {        return Ve_status;    }    public void setVe_status(int ve_status) {        Ve_status = ve_status;    }    public int getVe_dotten() {        return Ve_dotten;    }    public void setVe_dotten(int ve_dotten) {        Ve_dotten = ve_dotten;    }    public int getVe_tp() {        return Ve_tp;    }    public void setVe_tp(int ve_tp) {        Ve_tp = ve_tp;    }    /**     * 通过状态来设置商品的价格和状态信息     */    @SuppressLint("ResourceType")    public void handlerBegin() {        try {            switch (this.getSt_status()) {                case LocalValues.VALUES_SHOPPAGE.NORMAL:                    /*商品正常*/                    if (this.getVe_tp() != 0) {                        TextUnt.with(this.getAt_activity(), getVe_tp()).setText(this.getSt_tp()                                .trim()).setTextColor(this.getAt_activity().getResources()                                .getString(R.color.colorPrice));                    }                    break;                case LocalValues.VALUES_SHOPPAGE.PROMOTION:                    /*商品促销*/                    /*设置价格的字体颜色*/                    if (this.getVe_tp() != 0) {                        TextUnt.with(this.getAt_activity(), getVe_tp()).setText(this.getSt_tp()                                .trim()).setTextColor(this.getAt_activity().getResources()                                .getString(R.color.colorPromotion));                    }                    /*设置状态的STATIC样式*/                    if (this.getVe_status() != 0) {                        TextUnt.with(this.getAt_activity(), this.getVe_status()).setText("商品促销")                                .setBackground(Tools.CreateDrawable(1, this.getAt_activity()                                        .getResources().getString(R.color.colorPromotion), this                                        .getAt_activity().getResources().getString(R.color                                                .colorPromotion), 5)).setTextColor("#ffffff");                    }                case LocalValues.VALUES_SHOPPAGE.REDUCTION:                    /*商品满减*/                    /*设置价格的字体颜色*/                    if (this.getVe_tp() != 0) {                        TextUnt.with(this.getAt_activity(), getVe_tp()).setText(this.getSt_tp()                                .trim()).setTextColor(this.getAt_activity().getResources()                                .getString(R.color.colorReduction));                    }                    /*设置状态的STATIC样式*/                    if (this.getVe_status() != 0) {                        TextUnt.with(this.getAt_activity(), this.getVe_status()).setText("商品满减")                                .setBackground(Tools.CreateDrawable(1, this.getAt_activity()                                        .getResources().getString(R.color.colorReduction), this                                        .getAt_activity().getResources().getString(R.color                                                .colorReduction), 5)).setTextColor("#ffffff");                    }                    break;                case LocalValues.VALUES_SHOPPAGE.VOLUME:                    /*商品用卷*/                    /*设置价格的字体颜色*/                    if (this.getVe_tp() != 0) {                        TextUnt.with(this.getAt_activity(), getVe_tp()).setText(this.getSt_tp()                                .trim()).setTextColor(this.getAt_activity().getResources()                                .getString(R.color.colorVolumn));                    }                    /*设置状态的STATIC样式*/                    if (this.getVe_status() != 0) {                        TextUnt.with(this.getAt_activity(), this.getVe_status()).setText("商品用卷")                                .setBackground(Tools.CreateDrawable(1, this.getAt_activity()                                        .getResources().getString(R.color.colorVolumn), this                                        .getAt_activity().getResources().getString(R.color                                                .colorVolumn), 5)).setTextColor("#ffffff");                    }                    break;                case LocalValues.VALUES_SHOPPAGE.ONLY_VIP:                    /*只能VIP购买*/                    /*设置价格的字体颜色*/                    if (this.getVe_tp() != 0) {                        TextUnt.with(this.getAt_activity(), getVe_tp()).setText(this.getSt_tp()                                .trim()).setTextColor(this.getAt_activity().getResources()                                .getString(R.color.colorVip));                    }                    /*设置状态的STATIC样式*/                    if (this.getVe_status() != 0) {                        TextUnt.with(this.getAt_activity(), this.getVe_status()).setText("仅限Vip")                                .setBackground(Tools.CreateDrawable(1, this.getAt_activity()                                        .getResources().getString(R.color.colorVip), this                                        .getAt_activity().getResources().getString(R.color                                                .colorVip), 5)).setTextColor("#ffffff");                    }                    break;                case LocalValues.VALUES_SHOPPAGE.ONLY_ONE:                    /*商品限购*/                    /*设置价格的字体颜色*/                    if (this.getVe_tp() != 0) {                        TextUnt.with(this.getAt_activity(), getVe_tp()).setText(this.getSt_tp()                                .trim()).setTextColor(this.getAt_activity().getResources()                                .getString(R.color.colorPayonly));                    }                    /*设置状态的STATIC样式*/                    if (this.getVe_status() != 0) {                        TextUnt.with(this.getAt_activity(), this.getVe_status()).setText("商品限购")                                .setBackground(Tools.CreateDrawable(1, this.getAt_activity()                                        .getResources().getString(R.color.colorPayonly), this                                        .getAt_activity().getResources().getString(R.color                                                .colorPayonly), 5)).setTextColor("#ffffff");                    }                    break;            }        } catch (Exception e) {            Log.e(MSG, "整理商品的状态初始化时候出现错误:" + e.getMessage());        }    }}