package shlm.lmcs.com.lazycat.LazyShopAct;import android.annotation.SuppressLint;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.bumptech.glide.load.engine.DiskCacheStrategy;import org.xmlpull.v1.XmlPullParser;import io.github.xudaojie.qrcodelib.CaptureActivity;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyPage.WEB_VALUES_ACT;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Config;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlTagValuesFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyShopTools.LocalProgramTools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;import static shlm.lmcs.com.lazycat.LazyCatProgramUnt.Config.Windows.GET_WINDOW_VALUE_SHOP_ACTION;/** * 人心中的成见就是一座大山,任凭你怎么努力都休想搬动 * 我们迟早会分开,我们迟早会离婚 ---翁启鑫 * 2019年11月4号 * 我以为的支持  是你会在我最需要人支持的时候给我一丝的安慰说声没关系 慢慢来 我在 * 谢谢你的支持 无尽的嘲讽 无尽的挖苦  无尽的看不起,不然或许我不会成长》 * 你所说的对于金钱的无所谓 希望得到一个有温暖的爱情,你的所作所为都是在扯蛋. * 如果我有一天把代码中的信息给你看了,说明我对你已经没有任何的依赖,也没有了任何的寄托 * 我也不想做太多无所谓的解释 你看到的就是你看到的 千万别挽留 当这信息在你眼中出现,我将永远不会再对你好 */public class ScanQRCodeAct extends LazyCatAct {    private String MSG = "ScanQRCodeAct.java[+]";    private LocalProgramTools.UserToolsInstance userToolsInstance;    private ImageView barcodeImg;    private LocalValues.HTTP_ADDRS http_addrs;    @Override    protected void onCreate(Bundle savedInstanceState) {        //setContentView(R.layout.activity_scanbarcode);        userToolsInstance = LocalProgramTools.getUserToolsInstance();        /**/        /*设置标题*/        //TextUnt.with(this, R.id.assembly_act_headTitle).setText("扫一扫");        setTransparentBar();        /*找到条码图片*/        //barcodeImg = findViewById(R.id.activity_scanbarcode_ScanBarcodeImg);        // doGetBarcodeImg();/*        doGetScandata("6902265360018");*/        init();        super.onCreate(savedInstanceState);    }    /**     * 加载条码图片     * acitivy_scanbarcode_toSendsystemBody     */    private void doGetBarcodeImg() {        Log.i(MSG,                "图片条码地址:" + "http://api.k780.com/?app=barcode.get&bc_text=" + "6902265360018" + "&appkey=" + getResources().getString(R.string.nowApiKey) + "&sign=" + getResources().getString(R.string.nowApiMd5));        Glide.with(ScanQRCodeAct.this).load("http://api.k780.com/?app=barcode.get&bc_text=" + "6902265360018" +                "&appkey=" + getResources().getString(R.string.nowApiKey) + "&sign=" + getResources().getString(R.string.nowApiMd5)).diskCacheStrategy(DiskCacheStrategy.NONE).skipMemoryCache(false).into(barcodeImg);    }    /**     * 初始化 调用扫描器     */    private void init() {        // Listener();        /*获取地址工具类*/        http_addrs = LocalValues.getHttpaddrs(getApplicationContext());        StartScanActivity();    }    /**     * VIEW的事件监听     */    private void Listener() {        /*退出的点击监听事件*/        findViewById(R.id.assembly_act_headBackImg).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });    }    private void StartScanActivity() {        Intent i = new Intent(this, CaptureActivity.class);        startActivityForResult(i, LocalValues.VALUES_SCAN.VALUES_QR_CODE);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (resultCode == RESULT_OK && requestCode == LocalValues.VALUES_SCAN.VALUES_QR_CODE && data != null) {            String result = data.getStringExtra("result");            doGetScandata(result);        } else {            doCantScan();        }    }    /**     * 无法获取扫描数据的通知     */    private void doCantScan() {        Toast.makeText(getApplicationContext(), "无法获取扫描结果,请重试", Toast.LENGTH_SHORT).show();        finish();    }    /**     * 获取到扫描结果之后的处理事件     */    private void doGetScandata(final String _scanData) {        if (_scanData.indexOf(LocalValues.VALUES_QRCODE.VALUES_QRCODE_ACTIVITY) != -1) {            /*窗口 二维码*/        } else if (_scanData.indexOf(LocalValues.VALUES_QRCODE.VALUES_QRCODE_WEBDATA) != -1) {            /*网页 二维码*/            String url = _scanData.split("\\|")[1];            WEB_VALUES_ACT web_values_act = new WEB_VALUES_ACT(url);            web_values_act.set_TitleBackColor("#ffffff");            web_values_act.set_StaticColor("#ffffff");            LeftCompanyActStartWebView(true, web_values_act);        } else {        }    }    /**     * 开始整理界面     */    @SuppressLint("ResourceType")    private void initMainpage(String _scanData) {    }}