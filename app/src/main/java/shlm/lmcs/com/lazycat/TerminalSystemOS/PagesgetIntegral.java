package shlm.lmcs.com.lazycat.TerminalSystemOS;import android.content.Context;import android.util.Log;import android.util.Xml;import org.xmlpull.v1.XmlPullParser;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;/** * 获取积分界面要展示的所有信息 * xml */public class PagesgetIntegral {    private static String MSG = "PagesgetIntegral.java[+]";    private static String RETURN_CODE = "";    private static IntegralPages _IntegralPages = new IntegralPages();    /**     * 开始获取信息     */    public static void _get(final Context _context, final onIntegralGet _OnIntegralGet) {        LocalValues.HTTP_ADDRS http_addrs = new LocalValues.HTTP_ADDRS(_context);        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder(true);        xmlInstance.overDom();        Net.doPostXml(http_addrs.HTTP_ADDR_TERMINALSYSTEM_OS_PAGEINTEGRAL, new ProgramInterface() {            @Override            public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                _refreshDialog.dismiss();                Log.i(MSG, "获取积分主界面返回数据信息:" + data.trim());                if (data.equals(LocalValues.NET_ERROR)) {                    _OnIntegralGet.onError();                } else {                    XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                    xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                        @Override                        public void onFaile() {                        }                        @Override                        public void onStartDocument(String tag) {                        }                        @Override                        public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                            try {                                /*返回状态码*/                                if (tag.equals(LocalAction.ACTION_RETURNCODE)) {                                    RETURN_CODE = pullParser.nextText().trim();                                }                                /*积分*/                                if (tag.equals(LocalAction.ACTION_SHOPVALUES.ACTION_SHOPVALUES_INTEGRAL)) {                                    _IntegralPages._Integral = pullParser.nextText().trim();                                }                                /*收益*/                                if (tag.equals(LocalAction.ACTION_PAGES_INTEGRAL.ACTION_PROFIT)) {                                    _IntegralPages._Profit = pullParser.nextText().trim();                                }                            } catch (Exception e) {                            }                        }                        @Override                        public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                        }                        @Override                        public void onEndDocument() {                            if (RETURN_CODE.equals(LocalValues.VALUES_USERCENTER.LOGIN_ERROR)) {                                //登录失败                                _OnIntegralGet.onNotlogin();                            } else if (RETURN_CODE.equals(LocalValues.NET_OK)) {                                _OnIntegralGet.onGet(_IntegralPages);                            }                        }                    });                }            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                return Tools.getShowwait(_context);            }            @Override            public void onFaile(String data, int code) {            }        }, xmlInstance.getXmlTree().trim());    }    /**     * 接口回调     */    public interface onIntegralGet {        void onGet(IntegralPages _integralPages);/*获取到数据信息*/        void onNotlogin();/*没有登录系统*/        void onError();/*服务器失败调试输出0002错误信息*/    }    public static class IntegralPages {        public String _Integral;/*积分*/        public String _Profit;/*收益*/    }}