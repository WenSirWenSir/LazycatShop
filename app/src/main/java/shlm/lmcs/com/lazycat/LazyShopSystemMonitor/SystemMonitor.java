package shlm.lmcs.com.lazycat.LazyShopSystemMonitor;import android.content.Context;import android.util.Log;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyPage.WAIT_ITME_DIALOGPAGE;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 系统的管理核心服务者 检测软件状态 将状态回传到服务器里 */public class SystemMonitor {    public static final String TAG_ERROR = "0";/*致命错误*/    public static final String TAG_LOG = "1";/*日志*/    public static final String TAG_WORING = "2";/*警告*/    public static final String INT_TAG_TAG = "tag";/*记录Tag*/    public static final String INT_TAG_FOR = "for";/*来自哪个Act*/    public static final String INT_TAG_MSG = "msg";/*服务器需要采集的信息*/    public static final String INT_TAG_IMEI = "imei";/*手机的IMEI*/    /**     * @param _context 如果是Activity就必须传入This的类     * @param _tag     要记录的tag的名称     * @param _for     来自哪个Activity     * @param _msg     记录的内容     */    public static void SaveTag(final Context _context, String _tag, String _for, String _msg) {        LocalValues.HTTP_ADDRS http_addrs;/*地址的类*/        http_addrs = new LocalValues.HTTP_ADDRS(_context);        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder(false);        xmlInstance.initDom();        xmlInstance.setXmlTree(INT_TAG_TAG, _tag);        xmlInstance.setXmlTree(INT_TAG_FOR, _for);        xmlInstance.setXmlTree(INT_TAG_MSG, _msg);        xmlInstance.setXmlTree(INT_TAG_IMEI, Tools.toGetIMEI(_context));        xmlInstance.overDom();        Net.doPostXml(http_addrs.HTTP_ADDR_SYSTEMMONITOR_LOG, new ProgramInterface() {            @Override            public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                _refreshDialog.dismiss();                Log.i("SystemMonitor.java[+]", "记录服务器处理信息:" + data.trim());            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                final WaitDialog.RefreshDialog refreshDialog = new WaitDialog.RefreshDialog                        (_context);                WAIT_ITME_DIALOGPAGE wait_itme_dialogpage = new WAIT_ITME_DIALOGPAGE();                wait_itme_dialogpage.setImg(R.id.item_wait_img);                wait_itme_dialogpage.setView(R.layout.item_wait);                wait_itme_dialogpage.setTitle(R.id.item_wait_title);                refreshDialog.Init(wait_itme_dialogpage);                refreshDialog.showRefreshDialog("请稍后...", false);                return refreshDialog;            }            @Override            public void onFaile(String data, int code) {            }        }, xmlInstance.getXmlTree());    }}