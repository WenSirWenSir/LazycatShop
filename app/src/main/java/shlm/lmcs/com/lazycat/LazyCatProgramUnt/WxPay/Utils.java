package shlm.lmcs.com.lazycat.LazyCatProgramUnt.WxPay;import android.util.Log;import java.security.MessageDigest;import java.util.LinkedList;import java.util.List;import java.util.Random;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;public class Utils {    private static final String MSG = "Utils.java[+]";    public final static String app_id = "wxbfc4618cf0bd4b88";    public final static String app_key = "llywxhn15206036936dbqwanwrz520qx";    public final static String business = "1499072172";    public final static String onBack = "http://120.79.63.36";    public final static String createIp = "127.0.0.1";    public static String getSign(List<SingValues> _signvalues) {        try {            StringBuilder sb = new StringBuilder();            for (int i = 0; i < _signvalues.size(); i++) {                sb.append(_signvalues.get(i).getKey());                sb.append("=");                sb.append(_signvalues.get(i).getValues());                sb.append("&");            }            sb.append("key=");            sb.append(app_key);            Log.i(MSG,"添加计算的KEY " + app_key);            String Sign = getMD5(sb.toString().getBytes()).toUpperCase();            Log.i(MSG, "计算出来的SIGN为:" + Sign);            return Sign;        } catch (Exception e) {            return "";        }    }    public static String getXmldata(List<SingValues> _signvalues) {        List<SingValues> singvalues = new LinkedList<SingValues>();        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder();        xmlInstance.initDom();       /* for (int i = 0; i < _signvalues.size(); i++) {            singvalues.add(new SingValues(_signvalues.get(i).getKey(), _signvalues.get(i)                    .getValues()));        }*/        /**         * 这些都是默认的值  求Sign用         */        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_ATTACH, "支付测试"));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_BODY, "支付测试"));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_NONCE_STR,                "kjkjsdfjkjlk"));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_TOTAL_FEE, "1"));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_TRADE_TYPE, "APP"));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_APPID, app_id));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_MCH_ID, business));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_NOTIFY_URL, onBack));        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_OUT_TRADE_NO,"sdfwedsf32fs"));/*随机数*/        singvalues.add(new SingValues(LocalAction.ACTION_WXPAY.ACTION_SPBILL_CREATE_IP, createIp));        Log.i(MSG,"数组大小：" + singvalues.size());        /*构建完毕 获取Sign*/        String Sign = getSign(singvalues);        /**         * 构建数据         */        for (int i = 0; i < singvalues.size(); i++) {            xmlInstance.setXmlTree(singvalues.get(i).getKey().trim(), singvalues.get(i)                    .getValues().trim());        }        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_APPID, app_id);/*APPKEY*/        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_MCH_ID, business);/*商户号*/        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_NOTIFY_URL, onBack);/*回调地址*/        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_OUT_TRADE_NO,"39293885");/*随机数*/        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_SPBILL_CREATE_IP, createIp);/*登录地址*/        xmlInstance.setXmlTree(LocalAction.ACTION_WXPAY.ACTION_SIGN, Sign);        xmlInstance.overDom();        Log.i(MSG,"xml提交信息："+ xmlInstance.getXmlTree().trim());        return xmlInstance.getXmlTree().trim();    }    public static String getMD5(byte[] buffer) {        char hexDigits[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd',                'e', 'f'};        try {            MessageDigest mdTemp = MessageDigest.getInstance("MD5");            mdTemp.update(buffer);            byte[] md = mdTemp.digest();            int j = md.length;            char str[] = new char[j * 2];            int k = 0;            for (int i = 0; i < j; i++) {                byte byte0 = md[i];                str[k++] = hexDigits[byte0 >>> 4 & 0xf];                str[k++] = hexDigits[byte0 & 0xf];            }            return new String(str);        } catch (Exception e) {            return null;        }    }    public static String getOutTradNo() {        try {            Random random = new Random();            return getMD5(String.valueOf(random.nextInt(10000)).getBytes());        } catch (Exception e) {            Random random = new Random();            return getMD5(String.valueOf(random.nextInt(10000)).getBytes());        }    }}