package shlm.lmcs.com.lazycat.LazyShopAct.SystemAct;import android.annotation.SuppressLint;import android.os.Bundle;import android.os.Handler;import android.os.Message;import java.util.Timer;import java.util.TimerTask;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.R;public class SystemSeeOrderDetailsact extends LazyCatAct {    private final int HANDLER_CALC_TIMER = 1;    private Timer timer;    @SuppressLint("HandlerLeak")    private Handler handler = new Handler() {        @Override        public void handleMessage(Message msg) {            switch (msg.what) {                case HANDLER_CALC_TIMER:                    int timenumber = Integer.parseInt(TextUnt.with(SystemSeeOrderDetailsact.this,                            R.id.activity_systemseeorder_detailsSurplusTime).getTexttoString());                    timenumber--;                    TextUnt.with(SystemSeeOrderDetailsact.this, R.id                            .activity_systemseeorder_detailsSurplusTime).setText(String.valueOf                            (timenumber));                    break;            }            super.handleMessage(msg);        }    };    @SuppressLint("ResourceType")    @Override    protected void onCreate(Bundle savedInstanceState) {        setContentView(R.layout.activity_systemseeorder_details);        setTransparentBar();        /*判断是否是vip*/        TextUnt.with(SystemSeeOrderDetailsact.this, R.id.activity_systemseeorder_details_VipMsg)                .setBackground(Tools.CreateDrawable(1, getResources().getString(R.color                        .colorPrice), getResources().getString(R.color.colorPrice), 5)).setText                ("Vip超时赔付保护中");        init();        super.onCreate(savedInstanceState);    }    /**     * 初始化     */    private void init() {        onTimestartCalc();    }    /**     * 倒计时     */    private void onTimestartCalc() {        timer = new Timer();        timer.schedule(new TimerTask() {            @Override            public void run() {                Message msg = new Message();                msg.what = HANDLER_CALC_TIMER;                handler.sendMessage(msg);            }        }, 1000, 1000);    }    @Override    protected void onDestroy() {        timer.cancel();        timer = null;        super.onDestroy();    }    @Override    protected void onPause() {        timer.cancel();        super.onPause();    }    @Override    protected void onStop() {        timer.cancel();        super.onStop();    }    @Override    protected void onResume() {        init();        super.onResume();    }    @Override    protected void onRestart() {        init();        super.onRestart();    }}