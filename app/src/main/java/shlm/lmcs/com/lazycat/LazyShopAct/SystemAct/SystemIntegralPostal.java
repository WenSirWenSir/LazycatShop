package shlm.lmcs.com.lazycat.LazyShopAct.SystemAct;import android.annotation.SuppressLint;import android.app.AlertDialog;import android.graphics.Color;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.widget.ImageView;import android.widget.Toast;import org.xmlpull.v1.XmlPullParser;import cn.pedant.SweetAlert.SweetAlertDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyPage.WAIT_ITME_DIALOGPAGE;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.RelativeLayoutUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Tools;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.LazyShopView.SystemTextView;import shlm.lmcs.com.lazycat.LazyShopVip.SystemVip;import shlm.lmcs.com.lazycat.R;/** * 积分主界面 */public class SystemIntegralPostal extends LazyCatAct {    private String MSG = "SystemIntegralPostal.java[+]";    private SystemTextView IntegerNumber;/*积分显示的控件*/    private LocalValues.HTTP_ADDRS http_addrs;    private Integral integral = new Integral();    private ImageView ico_back;    /*是否为VIP*/    private Boolean isVip = false;    @Override    protected void onCreate(Bundle savedInstanceState) {        setTransparentBar();        setContentView(R.layout.activity_integralpostal);        http_addrs = new LocalValues.HTTP_ADDRS(getApplicationContext());        IntegerNumber = findViewById(R.id.activity_integralpostalInteger);        init();        listener();        super.onCreate(savedInstanceState);    }    /**     * 程序初始化     */    @SuppressLint("NewApi")    private void init() {        ico_back = findViewById(R.id.activity_integralpostalBtnBack);        ico_back.setImageDrawable(Tools.setSvgColor(getApplicationContext(), R.drawable.ico_back,                "#ffffff"));        /**         * 初始化获取积分的数据信息         */        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder(true);        xmlInstance.setXmlTree(LocalAction.ACTION_INTEGRAL.INTEGRAL_INFOR, LocalValues                .VALUES_INTEGRAL.INTEGRAL_INFOR_SHOP);        xmlInstance.setXmlTree(LocalAction.ACTION_INTEGRAL.INTEGRAL_NUMBER, "200");        xmlInstance.setXmlTree(LocalAction.ACTION_INTEGRAL.INTEGRAL_STATUS, LocalValues                .VALUES_INTEGRAL.INTEGRAL_STATUS_CANT);        xmlInstance.overDom();        Net.doPostXml(http_addrs.HTTP_ADDR_TOGETINTEGRAL, new ProgramInterface() {            @Override            public void onSucess(String data, int code, WaitDialog.RefreshDialog _refreshDialog) {                Log.e(MSG, "请求积分获取的数据:" + data);                _refreshDialog.dismiss();                XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                    @Override                    public void onFaile() {                    }                    @Override                    public void onStartDocument(String tag) {                    }                    @Override                    public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                        try {                            if (tag.equals(LocalAction.ACTION_INTEGRAL.INTEGRAL_USE)) {                                /*可以使用的积分*/                                integral.setSt_useString(pullParser.nextText().trim());                            }                            if (tag.equals(LocalAction.ACTION_INTEGRAL.INTEGRAL_CANT)) {                                /*表示不可以使用的积分*/                                integral.setSt_cantString(pullParser.nextText().trim());                            }                            if (tag.equals(LocalAction.ACTION_INTEGRAL.INTEGRAL_FROZEN)) {                                /*表示被冻结的积分*/                                integral.setSt_frozenString(pullParser.nextText().trim());                            }                            if (tag.equals(LocalAction.ACTION_INTEGRAL.INTEGRAL_TOTAL)) {                                /*表示所有积分*/                                integral.setSt_totalString(pullParser.nextText().trim());                            }                        } catch (Exception e) {                            Log.e(MSG, "错误信息:" + e.getMessage());                        }                    }                    @Override                    public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                    }                    @Override                    public void onEndDocument() {                        initMain();                    }                });            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                /*初始化一个DIALOG*/                final WaitDialog.RefreshDialog refreshDialog = new WaitDialog.RefreshDialog                        (SystemIntegralPostal.this);                WAIT_ITME_DIALOGPAGE wait_itme_dialogpage = new WAIT_ITME_DIALOGPAGE();                wait_itme_dialogpage.setImg(R.id.item_wait_img);                wait_itme_dialogpage.setView(R.layout.item_wait);                wait_itme_dialogpage.setCanClose(false);                wait_itme_dialogpage.setTitle(R.id.item_wait_title);                refreshDialog.Init(wait_itme_dialogpage);                refreshDialog.showRefreshDialog("加载中...", false);                return refreshDialog;            }            @Override            public void onFaile(String data, int code) {            }        }, xmlInstance.getXmlTree());    }    /**     * 开始整理界面     */    private void initMain() {        /*总的积分*/        TextUnt.with(this, R.id.activity_integralpostalTvtotalIntegral).setText(integral                .getSt_totalString());        /*剩余的可用 积分*/        /**         * 执行数字增加动画         */        Tools.NumberAddAnimator(0.00f, Float.parseFloat(integral.getSt_totalString()),                IntegerNumber);        TextUnt.with(this, R.id.activity_integralpostalTvuseIntegral).setText(String.format                ("%.2f", Float.parseFloat(integral.getSt_useString()) / 10));    }    /**     * 监听事件     */    private void listener() {        RelativeLayoutUnt.with(this, R.id.activity_integralpostalBtnBrand).setOnclick(new View                .OnClickListener() {            @Override            public void onClick(View v) {                LazyCatActStartActivity(SystemAddBankcard.class, false);            }        });        /**         * 加入Vip的按钮         */        findViewById(R.id.activity_integralpostalBtnAddvip).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                /**                 * 判断是否为加盟vip客户  如果加盟了 就不要让客户重新加盟                 */                XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder(true);                xmlInstance.overDom();                SystemVip systemVip = new SystemVip(SystemIntegralPostal.this);                systemVip.Start(new SystemVip.OnVipcheck() {                    @Override                    public void onIsvip() {                        Tools.showError(SystemIntegralPostal.this, "错误信息", "您还不是加盟商");                    }                    @Override                    public void onIsnovip() {                        LazyCatActStartActivity(SystemAddtoVip.class, true);                    }                    @SuppressLint("ResourceType")                    @Override                    public void onIsnologin() {                        /*没有登录*/                        Tools.showError(SystemIntegralPostal.this, "错误信息", "您还没有登录");                    }                    @Override                    public void onIslogin() {                    }                });                Net.doPostXml(http_addrs.HTTP_ADDR_GETUSERVIP_STATUS, new ProgramInterface() {                    @Override                    public void onSucess(String data, int code, WaitDialog.RefreshDialog                            _refreshDialog) {                        _refreshDialog.dismiss();                        Log.i(MSG, "获取VIP的状态为:" + data.trim());                        XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                        xmlanalysisFactory.Startanalysis(new XmlanalysisFactory                                .XmlanalysisInterface() {                            @Override                            public void onFaile() {                            }                            @Override                            public void onStartDocument(String tag) {                            }                            @Override                            public void onStartTag(String tag, XmlPullParser pullParser, Integer                                    id) {                                try {                                    if (tag.equals(LocalAction.ACTION_LOCALUSERPAGE                                            .ACTION_LOCALUSERPAGE_VIPSTATUS)) {                                        if (pullParser.equals(LocalValues.VALUES_USERCENTER                                                .IS_VIP)) {                                            isVip = true;                                        } else {                                            isVip = false;                                        }                                    }                                } catch (Exception e) {                                }                            }                            @Override                            public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                            }                            @Override                            public void onEndDocument() {                                if (isVip) {                                } else {                                    LazyCatActStartActivity(SystemAddtoVip.class, false);                                }                            }                        });                    }                    @Override                    public WaitDialog.RefreshDialog onStartLoad() {                        /*初始化一个DIALOG*/                        final WaitDialog.RefreshDialog refreshDialog = new WaitDialog                                .RefreshDialog(SystemIntegralPostal.this);                        WAIT_ITME_DIALOGPAGE wait_itme_dialogpage = new WAIT_ITME_DIALOGPAGE();                        wait_itme_dialogpage.setImg(R.id.item_wait_img);                        wait_itme_dialogpage.setView(R.layout.item_wait);                        wait_itme_dialogpage.setCanClose(false);                        wait_itme_dialogpage.setTitle(R.id.item_wait_title);                        refreshDialog.Init(wait_itme_dialogpage);                        refreshDialog.showRefreshDialog("加载中...", false);                        return refreshDialog;                    }                    @Override                    public void onFaile(String data, int code) {                    }                }, xmlInstance.getXmlTree().trim());            }        });        /**         * VIP的特权         */        findViewById(R.id.activity_integralpostalBtnVipMsg).setOnClickListener(new View                .OnClickListener() {            @SuppressLint("ResourceType")            @Override            public void onClick(View v) {                AlertDialog.Builder builder = new AlertDialog.Builder(SystemIntegralPostal.this);                View item = LayoutInflater.from(getApplicationContext()).inflate(R.layout                        .item_showvip, null);                builder.setView(item);                TextUnt.with(item, R.id.item_showvipBtnClose).setBackground(Tools.CreateDrawable                        (1, getResources().getString(R.color.ThemeColor), getResources()                                .getString(R.color.ThemeColor), 10)).setOnClick(new View                        .OnClickListener() {                    @Override                    public void onClick(View v) {                        AlertDialog alertDialog = (AlertDialog) v.getTag();                        alertDialog.dismiss();                    }                }).setTag(builder.show());            }        });        /**         * 积分投资板块         */        findViewById(R.id.activity_integralpostalBtnInvest).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                Toast.makeText(getApplicationContext(), "实在不好意思,该板块云仓库暂时没有开放哦!请等待开通哦", Toast                        .LENGTH_SHORT).show();            }        });        /**         * 要求积分提现         */        findViewById(R.id.activity_integralpostalBtnDeposit).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                /**                 * 首先判断是不是VIP                 */                SystemVip systemVip = new SystemVip(SystemIntegralPostal.this);                systemVip.Start(new SystemVip.OnVipcheck() {                    @Override                    public void onIsvip() {                        Float integral = TextUnt.with(SystemIntegralPostal.this, R.id                                .activity_integralpostalInteger).getTexttoFloat();                        if (integral >= 10) {                            LazyCatActStartActivity(SystemIntegralDeposit.class, false);                        } else {                            Toast.makeText(getApplicationContext(), "实在不好意思," +                                    "您的积分太少无法提现。最低提现金额为100积分", Toast.LENGTH_SHORT).show();                        }                    }                    @SuppressLint("ResourceType")                    @Override                    public void onIsnovip() {                        /*没有登录*/                        SweetAlertDialog sweetAlertDialog = new SweetAlertDialog                                (SystemIntegralPostal.this, SweetAlertDialog.ERROR_TYPE);                        sweetAlertDialog.setContentTextSize(13);                        sweetAlertDialog.setContentText("你还没有加盟云仓库哦");                        sweetAlertDialog.setTitle("没有加盟");                        sweetAlertDialog.setConfirmButtonTextColor(Color.WHITE);                        sweetAlertDialog.setConfirmButtonBackgroundColor(Color.parseColor                                (getResources().getString(R.color.ThemeColor)));                        sweetAlertDialog.setConfirmButton("关闭", new SweetAlertDialog                                .OnSweetClickListener() {                            @Override                            public void onClick(SweetAlertDialog sweetAlertDialog) {                                sweetAlertDialog.dismiss();                            }                        });                        sweetAlertDialog.show();                    }                    @SuppressLint("ResourceType")                    @Override                    public void onIsnologin() {                        /*没有登录*/                        SweetAlertDialog sweetAlertDialog = new SweetAlertDialog                                (SystemIntegralPostal.this, SweetAlertDialog.ERROR_TYPE);                        sweetAlertDialog.setContentTextSize(13);                        sweetAlertDialog.setContentText("您还没有登录云仓库");                        sweetAlertDialog.setTitle("没有登录");                        sweetAlertDialog.setConfirmButtonTextColor(Color.WHITE);                        sweetAlertDialog.setConfirmButtonBackgroundColor(Color.parseColor                                (getResources().getString(R.color.ThemeColor)));                        sweetAlertDialog.setConfirmButton("关闭", new SweetAlertDialog                                .OnSweetClickListener() {                            @Override                            public void onClick(SweetAlertDialog sweetAlertDialog) {                                sweetAlertDialog.dismiss();                            }                        });                        sweetAlertDialog.show();                    }                    @Override                    public void onIslogin() {                    }                });            }        });        /**         * 积分明细         */        findViewById(R.id.activity_integralpostalBtnDetiled).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                LazyCatActStartActivity(SystemIntegralDetiled.class, false);            }        });        /**         * 退出的监听         */        ico_back.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });    }    class Integral {        String st_useString;/*总的使用积分*/        String st_cantString;/*不能使用的积分*/        String st_frozenString;/*冻结的积分*/        String st_totalString;/*总的积分*/        public String getSt_totalString() {            return st_totalString;        }        public void setSt_totalString(String st_totalString) {            this.st_totalString = st_totalString;        }        public String getSt_useString() {            return st_useString;        }        public void setSt_useString(String st_useString) {            this.st_useString = st_useString;        }        public String getSt_cantString() {            return st_cantString;        }        public void setSt_cantString(String st_cantString) {            this.st_cantString = st_cantString;        }        public String getSt_frozenString() {            return st_frozenString;        }        public void setSt_frozenString(String st_frozenString) {            this.st_frozenString = st_frozenString;        }    }}