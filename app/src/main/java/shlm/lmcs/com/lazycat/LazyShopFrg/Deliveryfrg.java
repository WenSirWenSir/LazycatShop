package shlm.lmcs.com.lazycat.LazyShopFrg;import android.annotation.SuppressLint;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import org.xmlpull.v1.XmlPullParser;import java.util.ArrayList;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyClass.LazyCatFragment;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyPage.WAIT_ITME_DIALOGPAGE;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.XmlBuilder;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.WaitDialog;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlTagValuesFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Interface.ProgramInterface;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.Net;import shlm.lmcs.com.lazycat.LazyShopValues.LocalAction;import shlm.lmcs.com.lazycat.LazyShopValues.LocalValues;import shlm.lmcs.com.lazycat.R;/** * 购物车的操作 */public class Deliveryfrg extends LazyCatFragment {    private LinearLayout cartlistBody;    private Viewpage viewpage;    private static final String MSG = "Deliveryfrg.java[+]";    /*登录状态*/    private Boolean user_static;    /**     * 一个商品加入一个数组里     */    private ArrayList<XmlTagValuesFactory.Shopvalues> shopvalues = new            ArrayList<XmlTagValuesFactory.Shopvalues>();    @SuppressLint("NewApi")    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle            savedInstanceState) {        View item = inflater.inflate(R.layout.fragment_delivery, null);        init(item);        return item;    }    @SuppressLint({"NewApi", "ResourceType"})    private void init(View _item) {        setStatusBar("#f30d88");        /*显示商品ITEM的ListView*/        cartlistBody = _item.findViewById(R.id.fragment_delivery_carlistBody);        /**         * 获取用户购物车的数据信息         *         * 需要提交验证的信息  为  用户的手机号码 用户的TOKEN  如果检测失败 就返回状态码失败         */        XmlBuilder.XmlInstance xmlInstance = XmlBuilder.getXmlinstanceBuilder();        xmlInstance.initDom();        xmlInstance.setXmlTree(LocalAction.ACTION_SHOP_CART.ACITON, LocalAction.ACTION_SHOP_CART                .ACTION_QUEYR_ALL);        xmlInstance.setXmlTree(LocalAction.ACTION_LOGIN.ACTION_PHONE, "15206036936");        xmlInstance.setXmlTree(LocalAction.ACTION_LOGIN.ACTION_TOKEN, "token");        xmlInstance.overDom();        Net.doPostXml(getContext(), LocalValues.HTTP_ADDRS.HTTP_ADDR_GETSHOPCAR, new                ProgramInterface() {            @Override            public void onSucess(String data, int code, final WaitDialog.RefreshDialog                    _refreshDialog) {                _refreshDialog.dismiss();                Log.i(MSG, "数据:" + data.trim());                /*xml数据解析*/                XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(data.trim());                xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                    @Override                    public void onFaile() {                    }                    @Override                    public void onStartDocument(String tag) {                    }                    @Override                    public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                        try {                            /*判断登录的状态*/                            if (XmlTagValuesFactory.Init_Shopcart.ACTION_USER_STATIC.equals(tag                                    .trim())) {                                if (pullParser.nextText().trim().equals(LocalValues.VALUES_LOGIN                                        .LOGIN_ERROR)) {                                    user_static = false;                                } else {                                    user_static = true;                                }                            }                        } catch (Exception e) {                        }                    }                    @Override                    public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                    }                    @Override                    public void onEndDocument() {                        _refreshDialog.dismiss();                        if (user_static) {                            Toast.makeText(getActivity().getApplicationContext(), "登录过期", Toast                                    .LENGTH_SHORT).show();                        }                    }                });            }            @Override            public WaitDialog.RefreshDialog onStartLoad() {                WaitDialog.RefreshDialog refreshDialog = new WaitDialog.RefreshDialog(getActivity                        ());                WAIT_ITME_DIALOGPAGE wait_itme_dialogpage = new WAIT_ITME_DIALOGPAGE();                wait_itme_dialogpage.setImg(R.id.item_wait_img);                wait_itme_dialogpage.setView(R.layout.item_wait);                wait_itme_dialogpage.setTitle(R.id.item_wait_title);                refreshDialog.Init(wait_itme_dialogpage);                refreshDialog.showRefreshDialog("请稍后...", false);                return refreshDialog;            }            @Override            public void onFaile(String data, int code) {            }        },xmlInstance.getXmlTree());        /**         * 模拟处理         */        for (int i = 0; i < 30; i++) {            View item = LayoutInflater.from(getContext()).inflate(R.layout.item_cart_classify,                    null);            cartlistBody.addView(item);/*            viewpage = new Viewpage();            */            /*标题*//*            viewpage.promotion_title = item.findViewById(R.id.item_car_shop_promotiontitle);            */            /*商品图片*//*            viewpage.shop_img = item.findViewById(R.id.item_cart_shop_shopimg);            */            /*商品的标题*//*            viewpage.title = item.findViewById(R.id.item_cart_shop_title);            */            /*商品用卷*//*            viewpage.coupon = item.findViewById(R.id.item_cart_coupon_static);            */            /*商品的选择按钮*//*            viewpage.btn_selectStatic = item.findViewById(R.id.item_cart_shop_btnSelectStatic);            viewpage.btn_selectStatic.setTag(false);            TextUnt.with(viewpage.coupon).setText("饮料类抵用券").setBackground(Tools.CreateDrawable(1,                    "#00a1d6", "#00a1d6", 2)).setTextColor("#ffffff");            */            /*商品用卷的标题*//*            viewpage.coupon_title = item.findViewById(R.id.item_cart_coupon_title);            TextUnt.with(viewpage.coupon_title).setText("");            TextUnt.with(viewpage.promotion_title).setBackground(Tools.CreateDrawable(1,                    "#f03d66", "#f30d66", 5)).setTextColor("#ffffff");            *//** * 图片点击 *//*            viewpage.btn_selectStatic.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    ImageView img = (ImageView) v;                    Boolean is = (Boolean) v.getTag();                    if (is) {                        ((ImageView) v).setImageResource(R.drawable.ico_car_noselect);                        v.setTag(false);                    }                    else{                        ((ImageView) v).setImageResource(R.drawable.ico_car_select);                        v.setTag(true);                    }                }            });*/        }    }    class Viewpage {        TextView title;        TextView promotion_title;        ImageView shop_img;        TextView coupon;        TextView coupon_title;        ImageView btn_selectStatic;    }}