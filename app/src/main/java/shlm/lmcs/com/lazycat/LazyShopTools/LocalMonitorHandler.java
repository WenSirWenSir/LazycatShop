package shlm.lmcs.com.lazycat.LazyShopTools;import android.graphics.Color;import android.util.Log;import android.view.View;import android.widget.LinearLayout;import android.widget.TextView;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyShopPage.LocalShopModuleValuepage;import shlm.lmcs.com.lazycat.R;/** * 首页处理器 处理首页的界面信息 */public class LocalMonitorHandler {    static HandlerBusiness handlerBusiness = new HandlerBusiness();    /**     * 获取处理促销ITEM的模块处理适配器     *     * @return     */    public static HandlerBusiness getHandlerBusinessAdapter() {        return handlerBusiness;    }    /**     * 促销ITEM的模块处理适配器     */    public static class HandlerBusiness extends LocalMonitorHandler {        private String BusinessMSG = "HandlerBusiness[+]";        private View item;        public LocalShopModuleValuepage.BusinessPromotionValues businessPromotionValues;        private Boolean Static = true;/*允许处理*/        /**         * 初始化处理器 填充需要的参数         *         * @param _item         * @param _businessPromotionValues         */        public void Instance(View _item, LocalShopModuleValuepage.BusinessPromotionValues                _businessPromotionValues) {            if (_item != null) {                this.item = _item;            } else {                Log.e(BusinessMSG, "促销的模块处理的ITEM为空！！！");            }            /**             * 设置参数             */            if (_businessPromotionValues != null) {                this.businessPromotionValues = _businessPromotionValues;/*设置参数值*/            } else {                Log.e(BusinessMSG, "促销设置的参数为空！！！");            }        }        public void Stop() {            this.Static = false;        }        public void Restart() {            if (this.Static == false) {                this.Static = true;            } else {                this.Static = false;            }            Start();        }        public void Start() {            Log.i(BusinessMSG, "适配器启动中....");            if (this.item != null && Static == true) {                /**                 * 开始处理界面                 */                /*标题*/                TextView Title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_Title);                /*第一个Item的状态*/                TextView first_status = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_firstStatus);                /*第一个Item的标题*/                TextView first_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fristTitle);                /*第一个Item的内容*/                TextView first_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fristText);                /*第一个Item的设置Image的控件*/                LinearLayout first_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_firstBackgroundBody);                /*寻找第二个Item的控件*/                /*第二个Item的状态*/                TextView second_static = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondStatus);                /*第二个Item的标题*/                TextView second_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondTitle);                /*第二个Item的内容*/                TextView second_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondText);                /*第二个Item的设置Image的控件*/                LinearLayout second_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondBackgroundBody);                /*寻找第三个Item的控件*/                /*第三个Item的状态*/                TextView three_static = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeStatus);                /*第三个Item的标题*/                TextView three_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeTitle);                /*第三个Item的内容*/                TextView three_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeText);                /*第三个Item的设置Image的控件*/                LinearLayout three_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeBackgroundBody);                /**                 * 其他控件初始化                 */                TextUnt.with(Title).setText(this.businessPromotionValues.getTitle()).setTextColor                        (this.businessPromotionValues.getTitle_color());                /**                 * 设置第一个Item的标题                 */                if (this.businessPromotionValues.getFirst_item_status().equals("")) {                    /*为空的话 就隐藏设置状态*/                    first_status.setVisibility(View.GONE);                } else {                    first_status.setBackgroundColor(Color.parseColor(this.businessPromotionValues                            .getFirst_item_status_background()));                    TextUnt.with(first_status).setText(this.businessPromotionValues                            .getFirst_item_status()).setTextColor(this.businessPromotionValues                            .getFirst_item_status_color());                }                TextUnt.with(first_title).setText(this.businessPromotionValues                        .getFirst_item_title()).setTextColor(this.businessPromotionValues                        .getFirst_item_title_color().trim());/*设置标题的颜色*/                TextUnt.with(first_text).setText(this.businessPromotionValues.getFirst_item_text                        ()).setTextColor(this.businessPromotionValues.getFirst_item_text_color()                        .trim());/*设置内容的颜色*/                /**                 * 设置第二个Item的标题                 */                if (this.businessPromotionValues.getSecond_item_status().equals("") || this                        .businessPromotionValues.getSecond_item_status() == null) {                    second_static.setVisibility(View.GONE);                } else {                    second_static.setBackgroundColor(Color.parseColor(this                            .businessPromotionValues.getSecond_item_status_background().trim()));                    TextUnt.with(second_static).setText(this.businessPromotionValues                            .getSecond_item_status()).setTextColor(this.businessPromotionValues                            .getSecond_item_status_color());                }                TextUnt.with(second_title).setText(this.businessPromotionValues                        .getSecond_item_title()).setTextColor(this.businessPromotionValues                        .getTitle_color());                TextUnt.with(second_text).setText(this.businessPromotionValues.getFirst_item_text                        ()).setTextColor(this.businessPromotionValues.getSecond_item_text_color()                        .trim());                /**                 * 设置第三个Item的标题                 */                if (this.businessPromotionValues.getThree_item_status().equals("") || this                        .businessPromotionValues.getThree_item_status() == null) {                    three_static.setVisibility(View.GONE);                } else {                    three_static.setBackgroundColor(Color.parseColor(this.businessPromotionValues                            .getSecond_item_status_background().trim()));                    TextUnt.with(three_static).setText(this.businessPromotionValues                            .getThree_item_status()).setTextColor(this.businessPromotionValues                            .getThree_item_status_color());                }                /**                 * 设置第四个Item的标题                 */            } else {            }        }        public void Pause() {            if (Static == true) {                /*改变状态  不允许处理*/                this.Static = false;            } else {                this.Static = true;            }        }    }    /**     * 处理新品上新的处理适配器     */    public static class HanderNewShop extends LocalMonitorHandler {        private String NewShopMSG = "HandlerNewShop[+]";        private View item;/*布局的ITEM*/        public void Instance(View _item) {            if (_item != null) {                this.item = _item;            } else {                Log.e(NewShopMSG, "父布局的VIEW为空!!");            }        }        public void Stop() {        }        public void Restart() {        }        public void Start() {        }        public void Pause() {        }    }}