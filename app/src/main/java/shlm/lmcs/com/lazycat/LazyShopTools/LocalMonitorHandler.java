package shlm.lmcs.com.lazycat.LazyShopTools;import android.content.Context;import android.graphics.Color;import android.util.Log;import android.view.View;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import shlm.lmcs.com.lazycat.LazyCatProgramUnt.CompanyTools.TextUnt;import shlm.lmcs.com.lazycat.LazyShopPage.LocalShopModuleValuepage;import shlm.lmcs.com.lazycat.R;/** * 首页处理器 处理首页的界面信息 */public class LocalMonitorHandler {    static HandlerBusiness handlerBusiness = new HandlerBusiness();    static HandlerNewShop handlerNewShop = new HandlerNewShop();    /**     * 获取新品上架的处理器     *     * @return     */    public static HandlerNewShop getHandlerNewShopAdapter() {        return handlerNewShop;    }    /**     * 处理新品上架的处理器     */    public static class HandlerNewShop extends LocalMonitorHandler {        private String NewShopMSG = "HandlerNewShop[+]";        private View item;        private LocalShopModuleValuepage.NewShopValues newShopValues;        private Context context;        private Boolean Static = true;/*允许处理*/        public void Instance(Context _Context,View _item, LocalShopModuleValuepage.NewShopValues _newShopValues) {            if (_item != null) {                this.item = _item;            } else {                Log.e(NewShopMSG, "促销的模块处理的ITEM为空！！！");            }            if (_Context != null) {                this.context = _Context;            }            else{                Log.e(NewShopMSG,"上下文对象为NULL");            }            /**             * 设置参数             */            if (_newShopValues != null) {                this.newShopValues = _newShopValues;/*设置参数值*/            } else {                Log.e(NewShopMSG, "促销设置的参数为空！！！");            }        }        public void Start() {            if (this.item != null && this.Static == true) {                /*开始处理事务*/                Log.i(NewShopMSG, "适配器启动中....");                /*控件标题*/                TextView title = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_title);                /*控件的内容*/                TextView text = this.item.findViewById(R.id.assembly_fragment_main_newshopin_text);                /*第一个Item的Values*/                /*点击的信息*/                RelativeLayout btn_first = this.item.findViewById(R.id.assembly_fragment_main_newshopin_firstBody);                /*状态*/                TextView first_status = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_firstStatus);                /*标题*/                TextView first_title = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_firstTitle);                /*内容*/                TextView first_text = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_firstText);                /*第二个Item的Values*/                /*状态*/                TextView second_status = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_secondStatus);                /*标题*/                TextView second_title = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_secondTitle);                /*内容*/                TextView second_text = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_secondText);                /*第三个Item的Values*/                /*状态*/                TextView three_status = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_threeStatus);                /*标题*/                TextView three_title = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_threeTitle);                /*内容*/                TextView three_text = this.item.findViewById(R.id                        .assembly_fragment_main_newshopin_threeText);                /*设置标题的颜色和文字*/                TextUnt.with(title).setText(this.newShopValues.getTitle()).setTextColor(this                        .newShopValues.getTitle_color());                /*设置宣传内容的文字和颜色*/                TextUnt.with(text).setText(this.newShopValues.getText()).setTextColor(this                        .newShopValues.getText_color());                /*设置第一个Item的数据*/                if (this.newShopValues.getFirst_new_shop_status().equals("") || this                        .newShopValues.getFirst_new_shop_status() == null) {                    /*没有状态  不显示*/                    first_status.setVisibility(View.GONE);                } else {                    first_status.setBackgroundColor(Color.parseColor(this.newShopValues                            .getFirst_new_shop_status_background()));                    Log.i(NewShopMSG, "设置的第一个Item的状态" + this.newShopValues                            .getFirst_new_shop_status());                    TextUnt.with(first_status).setText(this.newShopValues                            .getFirst_new_shop_status()).setTextColor(this.newShopValues                            .getFirst_new_shop_status_color());                }                /*设置标题*/                TextUnt.with(first_title).setText(this.newShopValues.getFirst_new_shop_title())                        .setTextColor(this.newShopValues.getFirst_new_shop_title_color());                /*设置内容*/                TextUnt.with(first_text).setText(this.newShopValues.getFirst_new_shop_text())                        .setTextColor(this.newShopValues.getFirst_new_shop_text_color());                /*点击监听*/                btn_first.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        Toast.makeText(context,"第一个Item被点击了",Toast.LENGTH_SHORT).show();                        Log.i(NewShopMSG,"第一个Item被点击了");                    }                });                /*设置第二个Item的数据*/                if (this.newShopValues.getSecond_new_shop_status().equals("") || this                        .newShopValues.getSecond_new_shop_status() == null) {                    /*没有状态 不显示*/                    second_status.setVisibility(View.GONE);                } else {                    second_status.setBackgroundColor(Color.parseColor(this.newShopValues                            .getSecond_new_shop_status_background()));                    TextUnt.with(second_status).setText(this.newShopValues                            .getSecond_new_shop_status()).setTextColor(this.newShopValues                            .getSecond_new_shop_status_color());                }                /*设置标题*/                TextUnt.with(second_title).setText(this.newShopValues.getSecond_new_shop_title())                        .setTextColor(this.newShopValues.getSecond_new_shop_title_color());                /*设置内容*/                TextUnt.with(second_text).setText(this.newShopValues.getSecond_new_shop_text())                        .setTextColor(this.newShopValues.getSecond_new_shop_text_color());                /*设置第三个Item的参数*/                if (this.newShopValues.getThree_new_shop_status().equals("") || this                        .newShopValues.getSecond_new_shop_status() == null) {                    /*没有状态 不显示*/                } else {                    three_status.setBackgroundColor(Color.parseColor(this.newShopValues                            .getThree_new_shop_status_background()));                    TextUnt.with(three_status).setText(this.newShopValues                            .getThree_new_shop_status()).setTextColor(this.newShopValues                            .getThree_new_shop_status_color());                }                /*设置标题*/                TextUnt.with(three_title).setText(this.newShopValues.getThree_new_shop_title())                        .setTextColor(this.newShopValues.getThree_new_shop_title_color());                /*设置内容*/                TextUnt.with(three_text).setText(this.newShopValues.getThree_new_shop_text())                        .setTextColor(this.newShopValues.getThree_new_shop_text_color());            } else {                Log.e(NewShopMSG, "新品促销的适配器启动失败,原因可能是因为Item为NULL或者是状态为False");            }        }    }    /**     * 获取处理促销ITEM的模块处理适配器     *     * @return     */    public static HandlerBusiness getHandlerBusinessAdapter() {        return handlerBusiness;    }    /**     * 促销ITEM的模块处理适配器     */    public static class HandlerBusiness extends LocalMonitorHandler {        private String BusinessMSG = "HandlerBusiness[+]";        private View item;        public LocalShopModuleValuepage.BusinessPromotionValues businessPromotionValues;        private Boolean Static = true;/*允许处理*/        private Context context;        /**         * 初始化处理器 填充需要的参数         *         * @param _item         * @param _businessPromotionValues         */        public void Instance(Context _context,View _item, LocalShopModuleValuepage.BusinessPromotionValues                _businessPromotionValues) {            if (_item != null) {                this.item = _item;            } else {                Log.e(BusinessMSG, "促销的模块处理的ITEM为空！！！");            }            if (_context != null) {                this.context = _context;            }            else{                Log.e(BusinessMSG,"上下文对象为空");            }            /**             * 设置参数             */            if (_businessPromotionValues != null) {                this.businessPromotionValues = _businessPromotionValues;/*设置参数值*/            } else {                Log.e(BusinessMSG, "促销设置的参数为空！！！");            }        }        public void Stop() {            this.Static = false;        }        public void Restart() {            if (this.Static == false) {                this.Static = true;            } else {                this.Static = false;            }            Start();        }        public void Start() {            Log.i(BusinessMSG, "适配器启动中....");            if (this.item != null && Static == true) {                /**                 * 开始处理界面                 */                /*标题*/                TextView Title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_Title);                /*第一个Item的状态*/                TextView first_status = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_firstStatus);                /*第一个Item的标题*/                TextView first_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fristTitle);                /*第一个Item的内容*/                TextView first_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fristText);                /*第一个Item的设置Image的控件*/                LinearLayout first_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_firstBackgroundBody);                /*寻找第二个Item的控件*/                /*第二个Item的状态*/                TextView second_static = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondStatus);                /*第二个Item的标题*/                TextView second_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondTitle);                /*第二个Item的内容*/                TextView second_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondText);                /*第二个Item的设置Image的控件*/                LinearLayout second_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_secondBackgroundBody);                /*寻找第三个Item的控件*/                /*第三个Item的状态*/                TextView three_static = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeStatus);                /*第三个Item的标题*/                TextView three_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeTitle);                /*第三个Item的内容*/                TextView three_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeText);                /*第三个Item的设置Image的控件*/                LinearLayout three_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_threeBackgroundBody);                /*寻找第四个Item的控件*/                /*第四个Item的状态*/                TextView four_static = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourStatus);                /*第四个Item的标题*/                TextView four_title = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourTitle);                /*第四个Item的内容*/                TextView four_text = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourText);                /*第四个Item的设置Image的控件*/                LinearLayout four_imgBody = this.item.findViewById(R.id                        .assembly_fragment_main_erpromotion_fourBackgroundBody);                /**                 * 其他控件初始化                 */                TextUnt.with(Title).setText(this.businessPromotionValues.getTitle()).setTextColor                        (this.businessPromotionValues.getTitle_color());                /**                 * 设置第一个Item的标题                 */                if (this.businessPromotionValues.getFirst_item_status().equals("")) {                    /*为空的话 就隐藏设置状态*/                    first_status.setVisibility(View.GONE);                } else {                    first_status.setBackgroundColor(Color.parseColor(this.businessPromotionValues                            .getFirst_item_status_background()));                    TextUnt.with(first_status).setText(this.businessPromotionValues                            .getFirst_item_status()).setTextColor(this.businessPromotionValues                            .getFirst_item_status_color());                }                TextUnt.with(first_title).setText(this.businessPromotionValues                        .getFirst_item_title()).setTextColor(this.businessPromotionValues                        .getFirst_item_title_color().trim());/*设置标题的颜色*/                TextUnt.with(first_text).setText(this.businessPromotionValues.getFirst_item_text                        ()).setTextColor(this.businessPromotionValues.getFirst_item_text_color()                        .trim());/*设置内容的颜色*/                /**                 * 设置第二个Item的标题                 */                if (this.businessPromotionValues.getSecond_item_status().equals("") || this                        .businessPromotionValues.getSecond_item_status() == null) {                    second_static.setVisibility(View.GONE);                } else {                    second_static.setBackgroundColor(Color.parseColor(this                            .businessPromotionValues.getSecond_item_status_background().trim()));                    TextUnt.with(second_static).setText(this.businessPromotionValues                            .getSecond_item_status()).setTextColor(this.businessPromotionValues                            .getSecond_item_status_color());                }                TextUnt.with(second_title).setText(this.businessPromotionValues                        .getSecond_item_title()).setTextColor(this.businessPromotionValues                        .getTitle_color());                TextUnt.with(second_text).setText(this.businessPromotionValues                        .getSecond_item_text()).setTextColor(this.businessPromotionValues                        .getSecond_item_text_color().trim());                /**                 * 设置第三个Item的标题                 */                if (this.businessPromotionValues.getThree_item_status().equals("") || this                        .businessPromotionValues.getThree_item_status() == null) {                    three_static.setVisibility(View.GONE);                } else {                    three_static.setBackgroundColor(Color.parseColor(this.businessPromotionValues                            .getSecond_item_status_background().trim()));                    TextUnt.with(three_static).setText(this.businessPromotionValues                            .getThree_item_status()).setTextColor(this.businessPromotionValues                            .getThree_item_status_color());                }                TextUnt.with(three_title).setText(this.businessPromotionValues                        .getThree_item_title()).setTextColor(this.businessPromotionValues                        .getFour_item_title_color());                TextUnt.with(three_text).setText(this.businessPromotionValues.getThree_item_text                        ()).setTextColor(this.businessPromotionValues.getThree_item_text_color());                /**                 * 设置第四个Item的标题                 */                if (this.businessPromotionValues.getFour_item_status().equals("") || this                        .businessPromotionValues.getThree_item_status() == null) {                    four_static.setVisibility(View.GONE);                } else {                    four_static.setBackgroundColor(Color.parseColor(this.businessPromotionValues                            .getFour_item_status_bakcground().trim()));                    TextUnt.with(four_static).setText(this.businessPromotionValues                            .getFour_item_status()).setTextColor(this.businessPromotionValues                            .getFour_item_status_color());                }                TextUnt.with(four_title).setText(this.businessPromotionValues.getFour_item_title                        ()).setTextColor(this.businessPromotionValues.getFour_item_title_color());                TextUnt.with(four_text).setText(this.businessPromotionValues.getFour_item_text())                        .setTextColor(this.businessPromotionValues.getFour_item_text_color());            } else {            }        }        public void Pause() {            if (Static == true) {                /*改变状态  不允许处理*/                this.Static = false;            } else {                this.Static = true;            }        }    }    /**     * 处理新品上新的处理适配器     */    public static class HanderNewShop extends LocalMonitorHandler {        private String NewShopMSG = "HandlerNewShop[+]";        private View item;/*布局的ITEM*/        public void Instance(View _item) {            if (_item != null) {                this.item = _item;            } else {                Log.e(NewShopMSG, "父布局的VIEW为空!!");            }        }        public void Stop() {        }        public void Restart() {        }        public void Start() {        }        public void Pause() {        }    }}